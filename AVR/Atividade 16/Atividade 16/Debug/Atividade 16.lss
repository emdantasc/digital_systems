
Atividade 16.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000b4  00800100  00000596  0000062a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000596  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000034  008001b4  008001b4  000006de  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000006de  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000710  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  00000750  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000007f4  00000000  00000000  00000798  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006c0  00000000  00000000  00000f8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002fa  00000000  00000000  0000164c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000bc  00000000  00000000  00001948  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003d2  00000000  00000000  00001a04  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000184  00000000  00000000  00001dd6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  00001f5a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 e9       	ldi	r30, 0x96	; 150
  7c:	f5 e0       	ldi	r31, 0x05	; 5
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 3b       	cpi	r26, 0xB4	; 180
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a4 eb       	ldi	r26, 0xB4	; 180
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a8 3e       	cpi	r26, 0xE8	; 232
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 70 00 	call	0xe0	; 0xe0 <main>
  9e:	0c 94 c9 02 	jmp	0x592	; 0x592 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <start_timer>:
}

void stop_timer(void){
	TCCR1B&=~(1<<CS10);
	TIMSK1&=~(1<<OCIE1A);
	cli();
  a6:	8f e9       	ldi	r24, 0x9F	; 159
  a8:	9f e0       	ldi	r25, 0x0F	; 15
  aa:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  ae:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
  b2:	e1 e8       	ldi	r30, 0x81	; 129
  b4:	f0 e0       	ldi	r31, 0x00	; 0
  b6:	80 81       	ld	r24, Z
  b8:	8a 60       	ori	r24, 0x0A	; 10
  ba:	80 83       	st	Z, r24
  bc:	ef e6       	ldi	r30, 0x6F	; 111
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	80 81       	ld	r24, Z
  c2:	82 60       	ori	r24, 0x02	; 2
  c4:	80 83       	st	Z, r24
  c6:	78 94       	sei
  c8:	08 95       	ret

000000ca <adc_init>:
}

void adc_init(void){
	ADMUX|=(1<<REFS0); //set admux to read ADC0
  ca:	ec e7       	ldi	r30, 0x7C	; 124
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	80 81       	ld	r24, Z
  d0:	80 64       	ori	r24, 0x40	; 64
  d2:	80 83       	st	Z, r24
	ADCSRA|=(1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0); //enabling ADC and setting prescaler to 1/128
  d4:	ea e7       	ldi	r30, 0x7A	; 122
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	80 81       	ld	r24, Z
  da:	87 68       	ori	r24, 0x87	; 135
  dc:	80 83       	st	Z, r24
  de:	08 95       	ret

000000e0 <main>:
volatile uint8_t out=0, in=0, calcule=0, delayed[FILTER_TAP_NUM];
volatile float tmp=0;

int main(void){
		
	DDRD=0xFC; //0b11111100
  e0:	8c ef       	ldi	r24, 0xFC	; 252
  e2:	8a b9       	out	0x0a, r24	; 10
	DDRB=0x03; //0b00000011
  e4:	83 e0       	ldi	r24, 0x03	; 3
  e6:	84 b9       	out	0x04, r24	; 4
	DDRC=0x00;
  e8:	17 b8       	out	0x07, r1	; 7
  ea:	80 e0       	ldi	r24, 0x00	; 0
  ec:	90 e0       	ldi	r25, 0x00	; 0

	uint8_t it=0;
	
	for(it=0; it<FILTER_TAP_NUM; it++){delayed[it]=0;}
  ee:	fc 01       	movw	r30, r24
  f0:	e5 54       	subi	r30, 0x45	; 69
  f2:	fe 4f       	sbci	r31, 0xFE	; 254
  f4:	10 82       	st	Z, r1
  f6:	01 96       	adiw	r24, 0x01	; 1
  f8:	8d 32       	cpi	r24, 0x2D	; 45
  fa:	91 05       	cpc	r25, r1
  fc:	c1 f7       	brne	.-16     	; 0xee <main+0xe>
	
	start_timer();
  fe:	0e 94 53 00 	call	0xa6	; 0xa6 <start_timer>
	adc_init();
 102:	0e 94 65 00 	call	0xca	; 0xca <adc_init>
		
	while(1){	
		if (calcule==0){
			while((0x10&ADCSRA)!=0x10){}
 106:	0f 2e       	mov	r0, r31
 108:	fa e7       	ldi	r31, 0x7A	; 122
 10a:	af 2e       	mov	r10, r31
 10c:	b1 2c       	mov	r11, r1
 10e:	f0 2d       	mov	r31, r0
			in=ADCW>>2;
 110:	0f 2e       	mov	r0, r31
 112:	f8 e7       	ldi	r31, 0x78	; 120
 114:	2f 2e       	mov	r2, r31
 116:	31 2c       	mov	r3, r1
 118:	f0 2d       	mov	r31, r0
			for(it=(FILTER_TAP_NUM-1); it>=1; it--){delayed[it]=delayed[it-1];}
			delayed[0]=in;
 11a:	0f 2e       	mov	r0, r31
 11c:	fb eb       	ldi	r31, 0xBB	; 187
 11e:	8f 2e       	mov	r8, r31
 120:	f1 e0       	ldi	r31, 0x01	; 1
 122:	9f 2e       	mov	r9, r31
 124:	f0 2d       	mov	r31, r0
	
	start_timer();
	adc_init();
		
	while(1){	
		if (calcule==0){
 126:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <calcule>
 12a:	81 11       	cpse	r24, r1
 12c:	fc cf       	rjmp	.-8      	; 0x126 <main+0x46>
			while((0x10&ADCSRA)!=0x10){}
 12e:	f5 01       	movw	r30, r10
 130:	80 81       	ld	r24, Z
 132:	84 ff       	sbrs	r24, 4
 134:	fc cf       	rjmp	.-8      	; 0x12e <main+0x4e>
			in=ADCW>>2;
 136:	f1 01       	movw	r30, r2
 138:	80 81       	ld	r24, Z
 13a:	91 81       	ldd	r25, Z+1	; 0x01
 13c:	96 95       	lsr	r25
 13e:	87 95       	ror	r24
 140:	96 95       	lsr	r25
 142:	87 95       	ror	r24
 144:	80 93 b9 01 	sts	0x01B9, r24	; 0x8001b9 <in>
 148:	8b e2       	ldi	r24, 0x2B	; 43
 14a:	90 e0       	ldi	r25, 0x00	; 0
			for(it=(FILTER_TAP_NUM-1); it>=1; it--){delayed[it]=delayed[it-1];}
 14c:	fc 01       	movw	r30, r24
 14e:	e5 54       	subi	r30, 0x45	; 69
 150:	fe 4f       	sbci	r31, 0xFE	; 254
 152:	20 81       	ld	r18, Z
 154:	fc 01       	movw	r30, r24
 156:	e4 54       	subi	r30, 0x44	; 68
 158:	fe 4f       	sbci	r31, 0xFE	; 254
 15a:	20 83       	st	Z, r18
 15c:	01 97       	sbiw	r24, 0x01	; 1
 15e:	b0 f7       	brcc	.-20     	; 0x14c <main+0x6c>
			delayed[0]=in;
 160:	80 91 b9 01 	lds	r24, 0x01B9	; 0x8001b9 <in>
 164:	f4 01       	movw	r30, r8
 166:	80 83       	st	Z, r24
 168:	00 e0       	ldi	r16, 0x00	; 0
 16a:	11 e0       	ldi	r17, 0x01	; 1
 16c:	c0 e0       	ldi	r28, 0x00	; 0
 16e:	d0 e0       	ldi	r29, 0x00	; 0
			for(it=0; it<FILTER_TAP_NUM; it++){tmp+=delayed[it]*filter_taps[it];}
 170:	fe 01       	movw	r30, r28
 172:	e5 54       	subi	r30, 0x45	; 69
 174:	fe 4f       	sbci	r31, 0xFE	; 254
 176:	60 81       	ld	r22, Z
 178:	f8 01       	movw	r30, r16
 17a:	c1 90       	ld	r12, Z+
 17c:	d1 90       	ld	r13, Z+
 17e:	e1 90       	ld	r14, Z+
 180:	f1 90       	ld	r15, Z+
 182:	8f 01       	movw	r16, r30
 184:	40 90 b4 01 	lds	r4, 0x01B4	; 0x8001b4 <__data_end>
 188:	50 90 b5 01 	lds	r5, 0x01B5	; 0x8001b5 <__data_end+0x1>
 18c:	60 90 b6 01 	lds	r6, 0x01B6	; 0x8001b6 <__data_end+0x2>
 190:	70 90 b7 01 	lds	r7, 0x01B7	; 0x8001b7 <__data_end+0x3>
 194:	70 e0       	ldi	r23, 0x00	; 0
 196:	80 e0       	ldi	r24, 0x00	; 0
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <__floatsisf>
 19e:	a7 01       	movw	r20, r14
 1a0:	96 01       	movw	r18, r12
 1a2:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <__mulsf3>
 1a6:	a3 01       	movw	r20, r6
 1a8:	92 01       	movw	r18, r4
 1aa:	0e 94 33 01 	call	0x266	; 0x266 <__addsf3>
 1ae:	60 93 b4 01 	sts	0x01B4, r22	; 0x8001b4 <__data_end>
 1b2:	70 93 b5 01 	sts	0x01B5, r23	; 0x8001b5 <__data_end+0x1>
 1b6:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <__data_end+0x2>
 1ba:	90 93 b7 01 	sts	0x01B7, r25	; 0x8001b7 <__data_end+0x3>
 1be:	21 96       	adiw	r28, 0x01	; 1
 1c0:	cd 32       	cpi	r28, 0x2D	; 45
 1c2:	d1 05       	cpc	r29, r1
 1c4:	a9 f6       	brne	.-86     	; 0x170 <main+0x90>
			out=(uint8_t)tmp;
 1c6:	60 91 b4 01 	lds	r22, 0x01B4	; 0x8001b4 <__data_end>
 1ca:	70 91 b5 01 	lds	r23, 0x01B5	; 0x8001b5 <__data_end+0x1>
 1ce:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <__data_end+0x2>
 1d2:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <__data_end+0x3>
 1d6:	0e 94 9f 01 	call	0x33e	; 0x33e <__fixunssfsi>
 1da:	60 93 ba 01 	sts	0x01BA, r22	; 0x8001ba <out>
			calcule=1;
 1de:	f1 e0       	ldi	r31, 0x01	; 1
 1e0:	f0 93 b8 01 	sts	0x01B8, r31	; 0x8001b8 <calcule>
 1e4:	a0 cf       	rjmp	.-192    	; 0x126 <main+0x46>

000001e6 <write_value>:
	ADCSRA|=(1<<ADSC);
	calcule=0;
}

void write_value(const uint8_t value){
	PORTB=value>>6;
 1e6:	98 2f       	mov	r25, r24
 1e8:	92 95       	swap	r25
 1ea:	96 95       	lsr	r25
 1ec:	96 95       	lsr	r25
 1ee:	93 70       	andi	r25, 0x03	; 3
 1f0:	95 b9       	out	0x05, r25	; 5
	PORTD=value<<2;
 1f2:	88 0f       	add	r24, r24
 1f4:	88 0f       	add	r24, r24
 1f6:	8b b9       	out	0x0b, r24	; 11
 1f8:	08 95       	ret

000001fa <__vector_11>:
void adc_init(void){
	ADMUX|=(1<<REFS0); //set admux to read ADC0
	ADCSRA|=(1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0); //enabling ADC and setting prescaler to 1/128
}

ISR(TIMER1_COMPA_vect){
 1fa:	1f 92       	push	r1
 1fc:	0f 92       	push	r0
 1fe:	0f b6       	in	r0, 0x3f	; 63
 200:	0f 92       	push	r0
 202:	11 24       	eor	r1, r1
 204:	2f 93       	push	r18
 206:	3f 93       	push	r19
 208:	4f 93       	push	r20
 20a:	5f 93       	push	r21
 20c:	6f 93       	push	r22
 20e:	7f 93       	push	r23
 210:	8f 93       	push	r24
 212:	9f 93       	push	r25
 214:	af 93       	push	r26
 216:	bf 93       	push	r27
 218:	ef 93       	push	r30
 21a:	ff 93       	push	r31
	write_value(out);
 21c:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <out>
 220:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <write_value>
	tmp=0;
 224:	10 92 b4 01 	sts	0x01B4, r1	; 0x8001b4 <__data_end>
 228:	10 92 b5 01 	sts	0x01B5, r1	; 0x8001b5 <__data_end+0x1>
 22c:	10 92 b6 01 	sts	0x01B6, r1	; 0x8001b6 <__data_end+0x2>
 230:	10 92 b7 01 	sts	0x01B7, r1	; 0x8001b7 <__data_end+0x3>
	ADCSRA|=(1<<ADSC);
 234:	ea e7       	ldi	r30, 0x7A	; 122
 236:	f0 e0       	ldi	r31, 0x00	; 0
 238:	80 81       	ld	r24, Z
 23a:	80 64       	ori	r24, 0x40	; 64
 23c:	80 83       	st	Z, r24
	calcule=0;
 23e:	10 92 b8 01 	sts	0x01B8, r1	; 0x8001b8 <calcule>
}
 242:	ff 91       	pop	r31
 244:	ef 91       	pop	r30
 246:	bf 91       	pop	r27
 248:	af 91       	pop	r26
 24a:	9f 91       	pop	r25
 24c:	8f 91       	pop	r24
 24e:	7f 91       	pop	r23
 250:	6f 91       	pop	r22
 252:	5f 91       	pop	r21
 254:	4f 91       	pop	r20
 256:	3f 91       	pop	r19
 258:	2f 91       	pop	r18
 25a:	0f 90       	pop	r0
 25c:	0f be       	out	0x3f, r0	; 63
 25e:	0f 90       	pop	r0
 260:	1f 90       	pop	r1
 262:	18 95       	reti

00000264 <__subsf3>:
 264:	50 58       	subi	r21, 0x80	; 128

00000266 <__addsf3>:
 266:	bb 27       	eor	r27, r27
 268:	aa 27       	eor	r26, r26
 26a:	0e 94 4a 01 	call	0x294	; 0x294 <__addsf3x>
 26e:	0c 94 22 02 	jmp	0x444	; 0x444 <__fp_round>
 272:	0e 94 14 02 	call	0x428	; 0x428 <__fp_pscA>
 276:	38 f0       	brcs	.+14     	; 0x286 <__addsf3+0x20>
 278:	0e 94 1b 02 	call	0x436	; 0x436 <__fp_pscB>
 27c:	20 f0       	brcs	.+8      	; 0x286 <__addsf3+0x20>
 27e:	39 f4       	brne	.+14     	; 0x28e <__addsf3+0x28>
 280:	9f 3f       	cpi	r25, 0xFF	; 255
 282:	19 f4       	brne	.+6      	; 0x28a <__addsf3+0x24>
 284:	26 f4       	brtc	.+8      	; 0x28e <__addsf3+0x28>
 286:	0c 94 11 02 	jmp	0x422	; 0x422 <__fp_nan>
 28a:	0e f4       	brtc	.+2      	; 0x28e <__addsf3+0x28>
 28c:	e0 95       	com	r30
 28e:	e7 fb       	bst	r30, 7
 290:	0c 94 0b 02 	jmp	0x416	; 0x416 <__fp_inf>

00000294 <__addsf3x>:
 294:	e9 2f       	mov	r30, r25
 296:	0e 94 33 02 	call	0x466	; 0x466 <__fp_split3>
 29a:	58 f3       	brcs	.-42     	; 0x272 <__addsf3+0xc>
 29c:	ba 17       	cp	r27, r26
 29e:	62 07       	cpc	r22, r18
 2a0:	73 07       	cpc	r23, r19
 2a2:	84 07       	cpc	r24, r20
 2a4:	95 07       	cpc	r25, r21
 2a6:	20 f0       	brcs	.+8      	; 0x2b0 <__addsf3x+0x1c>
 2a8:	79 f4       	brne	.+30     	; 0x2c8 <__addsf3x+0x34>
 2aa:	a6 f5       	brtc	.+104    	; 0x314 <__addsf3x+0x80>
 2ac:	0c 94 55 02 	jmp	0x4aa	; 0x4aa <__fp_zero>
 2b0:	0e f4       	brtc	.+2      	; 0x2b4 <__addsf3x+0x20>
 2b2:	e0 95       	com	r30
 2b4:	0b 2e       	mov	r0, r27
 2b6:	ba 2f       	mov	r27, r26
 2b8:	a0 2d       	mov	r26, r0
 2ba:	0b 01       	movw	r0, r22
 2bc:	b9 01       	movw	r22, r18
 2be:	90 01       	movw	r18, r0
 2c0:	0c 01       	movw	r0, r24
 2c2:	ca 01       	movw	r24, r20
 2c4:	a0 01       	movw	r20, r0
 2c6:	11 24       	eor	r1, r1
 2c8:	ff 27       	eor	r31, r31
 2ca:	59 1b       	sub	r21, r25
 2cc:	99 f0       	breq	.+38     	; 0x2f4 <__addsf3x+0x60>
 2ce:	59 3f       	cpi	r21, 0xF9	; 249
 2d0:	50 f4       	brcc	.+20     	; 0x2e6 <__addsf3x+0x52>
 2d2:	50 3e       	cpi	r21, 0xE0	; 224
 2d4:	68 f1       	brcs	.+90     	; 0x330 <__addsf3x+0x9c>
 2d6:	1a 16       	cp	r1, r26
 2d8:	f0 40       	sbci	r31, 0x00	; 0
 2da:	a2 2f       	mov	r26, r18
 2dc:	23 2f       	mov	r18, r19
 2de:	34 2f       	mov	r19, r20
 2e0:	44 27       	eor	r20, r20
 2e2:	58 5f       	subi	r21, 0xF8	; 248
 2e4:	f3 cf       	rjmp	.-26     	; 0x2cc <__addsf3x+0x38>
 2e6:	46 95       	lsr	r20
 2e8:	37 95       	ror	r19
 2ea:	27 95       	ror	r18
 2ec:	a7 95       	ror	r26
 2ee:	f0 40       	sbci	r31, 0x00	; 0
 2f0:	53 95       	inc	r21
 2f2:	c9 f7       	brne	.-14     	; 0x2e6 <__addsf3x+0x52>
 2f4:	7e f4       	brtc	.+30     	; 0x314 <__addsf3x+0x80>
 2f6:	1f 16       	cp	r1, r31
 2f8:	ba 0b       	sbc	r27, r26
 2fa:	62 0b       	sbc	r22, r18
 2fc:	73 0b       	sbc	r23, r19
 2fe:	84 0b       	sbc	r24, r20
 300:	ba f0       	brmi	.+46     	; 0x330 <__addsf3x+0x9c>
 302:	91 50       	subi	r25, 0x01	; 1
 304:	a1 f0       	breq	.+40     	; 0x32e <__addsf3x+0x9a>
 306:	ff 0f       	add	r31, r31
 308:	bb 1f       	adc	r27, r27
 30a:	66 1f       	adc	r22, r22
 30c:	77 1f       	adc	r23, r23
 30e:	88 1f       	adc	r24, r24
 310:	c2 f7       	brpl	.-16     	; 0x302 <__addsf3x+0x6e>
 312:	0e c0       	rjmp	.+28     	; 0x330 <__addsf3x+0x9c>
 314:	ba 0f       	add	r27, r26
 316:	62 1f       	adc	r22, r18
 318:	73 1f       	adc	r23, r19
 31a:	84 1f       	adc	r24, r20
 31c:	48 f4       	brcc	.+18     	; 0x330 <__addsf3x+0x9c>
 31e:	87 95       	ror	r24
 320:	77 95       	ror	r23
 322:	67 95       	ror	r22
 324:	b7 95       	ror	r27
 326:	f7 95       	ror	r31
 328:	9e 3f       	cpi	r25, 0xFE	; 254
 32a:	08 f0       	brcs	.+2      	; 0x32e <__addsf3x+0x9a>
 32c:	b0 cf       	rjmp	.-160    	; 0x28e <__addsf3+0x28>
 32e:	93 95       	inc	r25
 330:	88 0f       	add	r24, r24
 332:	08 f0       	brcs	.+2      	; 0x336 <__addsf3x+0xa2>
 334:	99 27       	eor	r25, r25
 336:	ee 0f       	add	r30, r30
 338:	97 95       	ror	r25
 33a:	87 95       	ror	r24
 33c:	08 95       	ret

0000033e <__fixunssfsi>:
 33e:	0e 94 3b 02 	call	0x476	; 0x476 <__fp_splitA>
 342:	88 f0       	brcs	.+34     	; 0x366 <__fixunssfsi+0x28>
 344:	9f 57       	subi	r25, 0x7F	; 127
 346:	98 f0       	brcs	.+38     	; 0x36e <__fixunssfsi+0x30>
 348:	b9 2f       	mov	r27, r25
 34a:	99 27       	eor	r25, r25
 34c:	b7 51       	subi	r27, 0x17	; 23
 34e:	b0 f0       	brcs	.+44     	; 0x37c <__fixunssfsi+0x3e>
 350:	e1 f0       	breq	.+56     	; 0x38a <__fixunssfsi+0x4c>
 352:	66 0f       	add	r22, r22
 354:	77 1f       	adc	r23, r23
 356:	88 1f       	adc	r24, r24
 358:	99 1f       	adc	r25, r25
 35a:	1a f0       	brmi	.+6      	; 0x362 <__fixunssfsi+0x24>
 35c:	ba 95       	dec	r27
 35e:	c9 f7       	brne	.-14     	; 0x352 <__fixunssfsi+0x14>
 360:	14 c0       	rjmp	.+40     	; 0x38a <__fixunssfsi+0x4c>
 362:	b1 30       	cpi	r27, 0x01	; 1
 364:	91 f0       	breq	.+36     	; 0x38a <__fixunssfsi+0x4c>
 366:	0e 94 55 02 	call	0x4aa	; 0x4aa <__fp_zero>
 36a:	b1 e0       	ldi	r27, 0x01	; 1
 36c:	08 95       	ret
 36e:	0c 94 55 02 	jmp	0x4aa	; 0x4aa <__fp_zero>
 372:	67 2f       	mov	r22, r23
 374:	78 2f       	mov	r23, r24
 376:	88 27       	eor	r24, r24
 378:	b8 5f       	subi	r27, 0xF8	; 248
 37a:	39 f0       	breq	.+14     	; 0x38a <__fixunssfsi+0x4c>
 37c:	b9 3f       	cpi	r27, 0xF9	; 249
 37e:	cc f3       	brlt	.-14     	; 0x372 <__fixunssfsi+0x34>
 380:	86 95       	lsr	r24
 382:	77 95       	ror	r23
 384:	67 95       	ror	r22
 386:	b3 95       	inc	r27
 388:	d9 f7       	brne	.-10     	; 0x380 <__fixunssfsi+0x42>
 38a:	3e f4       	brtc	.+14     	; 0x39a <__fixunssfsi+0x5c>
 38c:	90 95       	com	r25
 38e:	80 95       	com	r24
 390:	70 95       	com	r23
 392:	61 95       	neg	r22
 394:	7f 4f       	sbci	r23, 0xFF	; 255
 396:	8f 4f       	sbci	r24, 0xFF	; 255
 398:	9f 4f       	sbci	r25, 0xFF	; 255
 39a:	08 95       	ret

0000039c <__floatunsisf>:
 39c:	e8 94       	clt
 39e:	09 c0       	rjmp	.+18     	; 0x3b2 <__floatsisf+0x12>

000003a0 <__floatsisf>:
 3a0:	97 fb       	bst	r25, 7
 3a2:	3e f4       	brtc	.+14     	; 0x3b2 <__floatsisf+0x12>
 3a4:	90 95       	com	r25
 3a6:	80 95       	com	r24
 3a8:	70 95       	com	r23
 3aa:	61 95       	neg	r22
 3ac:	7f 4f       	sbci	r23, 0xFF	; 255
 3ae:	8f 4f       	sbci	r24, 0xFF	; 255
 3b0:	9f 4f       	sbci	r25, 0xFF	; 255
 3b2:	99 23       	and	r25, r25
 3b4:	a9 f0       	breq	.+42     	; 0x3e0 <__floatsisf+0x40>
 3b6:	f9 2f       	mov	r31, r25
 3b8:	96 e9       	ldi	r25, 0x96	; 150
 3ba:	bb 27       	eor	r27, r27
 3bc:	93 95       	inc	r25
 3be:	f6 95       	lsr	r31
 3c0:	87 95       	ror	r24
 3c2:	77 95       	ror	r23
 3c4:	67 95       	ror	r22
 3c6:	b7 95       	ror	r27
 3c8:	f1 11       	cpse	r31, r1
 3ca:	f8 cf       	rjmp	.-16     	; 0x3bc <__floatsisf+0x1c>
 3cc:	fa f4       	brpl	.+62     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3ce:	bb 0f       	add	r27, r27
 3d0:	11 f4       	brne	.+4      	; 0x3d6 <__floatsisf+0x36>
 3d2:	60 ff       	sbrs	r22, 0
 3d4:	1b c0       	rjmp	.+54     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3d6:	6f 5f       	subi	r22, 0xFF	; 255
 3d8:	7f 4f       	sbci	r23, 0xFF	; 255
 3da:	8f 4f       	sbci	r24, 0xFF	; 255
 3dc:	9f 4f       	sbci	r25, 0xFF	; 255
 3de:	16 c0       	rjmp	.+44     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3e0:	88 23       	and	r24, r24
 3e2:	11 f0       	breq	.+4      	; 0x3e8 <__floatsisf+0x48>
 3e4:	96 e9       	ldi	r25, 0x96	; 150
 3e6:	11 c0       	rjmp	.+34     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3e8:	77 23       	and	r23, r23
 3ea:	21 f0       	breq	.+8      	; 0x3f4 <__floatsisf+0x54>
 3ec:	9e e8       	ldi	r25, 0x8E	; 142
 3ee:	87 2f       	mov	r24, r23
 3f0:	76 2f       	mov	r23, r22
 3f2:	05 c0       	rjmp	.+10     	; 0x3fe <__floatsisf+0x5e>
 3f4:	66 23       	and	r22, r22
 3f6:	71 f0       	breq	.+28     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 3f8:	96 e8       	ldi	r25, 0x86	; 134
 3fa:	86 2f       	mov	r24, r22
 3fc:	70 e0       	ldi	r23, 0x00	; 0
 3fe:	60 e0       	ldi	r22, 0x00	; 0
 400:	2a f0       	brmi	.+10     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 402:	9a 95       	dec	r25
 404:	66 0f       	add	r22, r22
 406:	77 1f       	adc	r23, r23
 408:	88 1f       	adc	r24, r24
 40a:	da f7       	brpl	.-10     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 40c:	88 0f       	add	r24, r24
 40e:	96 95       	lsr	r25
 410:	87 95       	ror	r24
 412:	97 f9       	bld	r25, 7
 414:	08 95       	ret

00000416 <__fp_inf>:
 416:	97 f9       	bld	r25, 7
 418:	9f 67       	ori	r25, 0x7F	; 127
 41a:	80 e8       	ldi	r24, 0x80	; 128
 41c:	70 e0       	ldi	r23, 0x00	; 0
 41e:	60 e0       	ldi	r22, 0x00	; 0
 420:	08 95       	ret

00000422 <__fp_nan>:
 422:	9f ef       	ldi	r25, 0xFF	; 255
 424:	80 ec       	ldi	r24, 0xC0	; 192
 426:	08 95       	ret

00000428 <__fp_pscA>:
 428:	00 24       	eor	r0, r0
 42a:	0a 94       	dec	r0
 42c:	16 16       	cp	r1, r22
 42e:	17 06       	cpc	r1, r23
 430:	18 06       	cpc	r1, r24
 432:	09 06       	cpc	r0, r25
 434:	08 95       	ret

00000436 <__fp_pscB>:
 436:	00 24       	eor	r0, r0
 438:	0a 94       	dec	r0
 43a:	12 16       	cp	r1, r18
 43c:	13 06       	cpc	r1, r19
 43e:	14 06       	cpc	r1, r20
 440:	05 06       	cpc	r0, r21
 442:	08 95       	ret

00000444 <__fp_round>:
 444:	09 2e       	mov	r0, r25
 446:	03 94       	inc	r0
 448:	00 0c       	add	r0, r0
 44a:	11 f4       	brne	.+4      	; 0x450 <__fp_round+0xc>
 44c:	88 23       	and	r24, r24
 44e:	52 f0       	brmi	.+20     	; 0x464 <__fp_round+0x20>
 450:	bb 0f       	add	r27, r27
 452:	40 f4       	brcc	.+16     	; 0x464 <__fp_round+0x20>
 454:	bf 2b       	or	r27, r31
 456:	11 f4       	brne	.+4      	; 0x45c <__fp_round+0x18>
 458:	60 ff       	sbrs	r22, 0
 45a:	04 c0       	rjmp	.+8      	; 0x464 <__fp_round+0x20>
 45c:	6f 5f       	subi	r22, 0xFF	; 255
 45e:	7f 4f       	sbci	r23, 0xFF	; 255
 460:	8f 4f       	sbci	r24, 0xFF	; 255
 462:	9f 4f       	sbci	r25, 0xFF	; 255
 464:	08 95       	ret

00000466 <__fp_split3>:
 466:	57 fd       	sbrc	r21, 7
 468:	90 58       	subi	r25, 0x80	; 128
 46a:	44 0f       	add	r20, r20
 46c:	55 1f       	adc	r21, r21
 46e:	59 f0       	breq	.+22     	; 0x486 <__fp_splitA+0x10>
 470:	5f 3f       	cpi	r21, 0xFF	; 255
 472:	71 f0       	breq	.+28     	; 0x490 <__fp_splitA+0x1a>
 474:	47 95       	ror	r20

00000476 <__fp_splitA>:
 476:	88 0f       	add	r24, r24
 478:	97 fb       	bst	r25, 7
 47a:	99 1f       	adc	r25, r25
 47c:	61 f0       	breq	.+24     	; 0x496 <__fp_splitA+0x20>
 47e:	9f 3f       	cpi	r25, 0xFF	; 255
 480:	79 f0       	breq	.+30     	; 0x4a0 <__fp_splitA+0x2a>
 482:	87 95       	ror	r24
 484:	08 95       	ret
 486:	12 16       	cp	r1, r18
 488:	13 06       	cpc	r1, r19
 48a:	14 06       	cpc	r1, r20
 48c:	55 1f       	adc	r21, r21
 48e:	f2 cf       	rjmp	.-28     	; 0x474 <__fp_split3+0xe>
 490:	46 95       	lsr	r20
 492:	f1 df       	rcall	.-30     	; 0x476 <__fp_splitA>
 494:	08 c0       	rjmp	.+16     	; 0x4a6 <__fp_splitA+0x30>
 496:	16 16       	cp	r1, r22
 498:	17 06       	cpc	r1, r23
 49a:	18 06       	cpc	r1, r24
 49c:	99 1f       	adc	r25, r25
 49e:	f1 cf       	rjmp	.-30     	; 0x482 <__fp_splitA+0xc>
 4a0:	86 95       	lsr	r24
 4a2:	71 05       	cpc	r23, r1
 4a4:	61 05       	cpc	r22, r1
 4a6:	08 94       	sec
 4a8:	08 95       	ret

000004aa <__fp_zero>:
 4aa:	e8 94       	clt

000004ac <__fp_szero>:
 4ac:	bb 27       	eor	r27, r27
 4ae:	66 27       	eor	r22, r22
 4b0:	77 27       	eor	r23, r23
 4b2:	cb 01       	movw	r24, r22
 4b4:	97 f9       	bld	r25, 7
 4b6:	08 95       	ret

000004b8 <__mulsf3>:
 4b8:	0e 94 6f 02 	call	0x4de	; 0x4de <__mulsf3x>
 4bc:	0c 94 22 02 	jmp	0x444	; 0x444 <__fp_round>
 4c0:	0e 94 14 02 	call	0x428	; 0x428 <__fp_pscA>
 4c4:	38 f0       	brcs	.+14     	; 0x4d4 <__mulsf3+0x1c>
 4c6:	0e 94 1b 02 	call	0x436	; 0x436 <__fp_pscB>
 4ca:	20 f0       	brcs	.+8      	; 0x4d4 <__mulsf3+0x1c>
 4cc:	95 23       	and	r25, r21
 4ce:	11 f0       	breq	.+4      	; 0x4d4 <__mulsf3+0x1c>
 4d0:	0c 94 0b 02 	jmp	0x416	; 0x416 <__fp_inf>
 4d4:	0c 94 11 02 	jmp	0x422	; 0x422 <__fp_nan>
 4d8:	11 24       	eor	r1, r1
 4da:	0c 94 56 02 	jmp	0x4ac	; 0x4ac <__fp_szero>

000004de <__mulsf3x>:
 4de:	0e 94 33 02 	call	0x466	; 0x466 <__fp_split3>
 4e2:	70 f3       	brcs	.-36     	; 0x4c0 <__mulsf3+0x8>

000004e4 <__mulsf3_pse>:
 4e4:	95 9f       	mul	r25, r21
 4e6:	c1 f3       	breq	.-16     	; 0x4d8 <__mulsf3+0x20>
 4e8:	95 0f       	add	r25, r21
 4ea:	50 e0       	ldi	r21, 0x00	; 0
 4ec:	55 1f       	adc	r21, r21
 4ee:	62 9f       	mul	r22, r18
 4f0:	f0 01       	movw	r30, r0
 4f2:	72 9f       	mul	r23, r18
 4f4:	bb 27       	eor	r27, r27
 4f6:	f0 0d       	add	r31, r0
 4f8:	b1 1d       	adc	r27, r1
 4fa:	63 9f       	mul	r22, r19
 4fc:	aa 27       	eor	r26, r26
 4fe:	f0 0d       	add	r31, r0
 500:	b1 1d       	adc	r27, r1
 502:	aa 1f       	adc	r26, r26
 504:	64 9f       	mul	r22, r20
 506:	66 27       	eor	r22, r22
 508:	b0 0d       	add	r27, r0
 50a:	a1 1d       	adc	r26, r1
 50c:	66 1f       	adc	r22, r22
 50e:	82 9f       	mul	r24, r18
 510:	22 27       	eor	r18, r18
 512:	b0 0d       	add	r27, r0
 514:	a1 1d       	adc	r26, r1
 516:	62 1f       	adc	r22, r18
 518:	73 9f       	mul	r23, r19
 51a:	b0 0d       	add	r27, r0
 51c:	a1 1d       	adc	r26, r1
 51e:	62 1f       	adc	r22, r18
 520:	83 9f       	mul	r24, r19
 522:	a0 0d       	add	r26, r0
 524:	61 1d       	adc	r22, r1
 526:	22 1f       	adc	r18, r18
 528:	74 9f       	mul	r23, r20
 52a:	33 27       	eor	r19, r19
 52c:	a0 0d       	add	r26, r0
 52e:	61 1d       	adc	r22, r1
 530:	23 1f       	adc	r18, r19
 532:	84 9f       	mul	r24, r20
 534:	60 0d       	add	r22, r0
 536:	21 1d       	adc	r18, r1
 538:	82 2f       	mov	r24, r18
 53a:	76 2f       	mov	r23, r22
 53c:	6a 2f       	mov	r22, r26
 53e:	11 24       	eor	r1, r1
 540:	9f 57       	subi	r25, 0x7F	; 127
 542:	50 40       	sbci	r21, 0x00	; 0
 544:	9a f0       	brmi	.+38     	; 0x56c <__mulsf3_pse+0x88>
 546:	f1 f0       	breq	.+60     	; 0x584 <__mulsf3_pse+0xa0>
 548:	88 23       	and	r24, r24
 54a:	4a f0       	brmi	.+18     	; 0x55e <__mulsf3_pse+0x7a>
 54c:	ee 0f       	add	r30, r30
 54e:	ff 1f       	adc	r31, r31
 550:	bb 1f       	adc	r27, r27
 552:	66 1f       	adc	r22, r22
 554:	77 1f       	adc	r23, r23
 556:	88 1f       	adc	r24, r24
 558:	91 50       	subi	r25, 0x01	; 1
 55a:	50 40       	sbci	r21, 0x00	; 0
 55c:	a9 f7       	brne	.-22     	; 0x548 <__mulsf3_pse+0x64>
 55e:	9e 3f       	cpi	r25, 0xFE	; 254
 560:	51 05       	cpc	r21, r1
 562:	80 f0       	brcs	.+32     	; 0x584 <__mulsf3_pse+0xa0>
 564:	0c 94 0b 02 	jmp	0x416	; 0x416 <__fp_inf>
 568:	0c 94 56 02 	jmp	0x4ac	; 0x4ac <__fp_szero>
 56c:	5f 3f       	cpi	r21, 0xFF	; 255
 56e:	e4 f3       	brlt	.-8      	; 0x568 <__mulsf3_pse+0x84>
 570:	98 3e       	cpi	r25, 0xE8	; 232
 572:	d4 f3       	brlt	.-12     	; 0x568 <__mulsf3_pse+0x84>
 574:	86 95       	lsr	r24
 576:	77 95       	ror	r23
 578:	67 95       	ror	r22
 57a:	b7 95       	ror	r27
 57c:	f7 95       	ror	r31
 57e:	e7 95       	ror	r30
 580:	9f 5f       	subi	r25, 0xFF	; 255
 582:	c1 f7       	brne	.-16     	; 0x574 <__mulsf3_pse+0x90>
 584:	fe 2b       	or	r31, r30
 586:	88 0f       	add	r24, r24
 588:	91 1d       	adc	r25, r1
 58a:	96 95       	lsr	r25
 58c:	87 95       	ror	r24
 58e:	97 f9       	bld	r25, 7
 590:	08 95       	ret

00000592 <_exit>:
 592:	f8 94       	cli

00000594 <__stop_program>:
 594:	ff cf       	rjmp	.-2      	; 0x594 <__stop_program>
