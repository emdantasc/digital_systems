
Atividade 17.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000005e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000594  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000005e8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000618  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  00000658  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007d2  00000000  00000000  00000690  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006d7  00000000  00000000  00000e62  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000030b  00000000  00000000  00001539  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000054  00000000  00000000  00001844  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003e5  00000000  00000000  00001898  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000018d  00000000  00000000  00001c7d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00001e0a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 6f 00 	call	0xde	; 0xde <main>
  78:	0c 94 c8 02 	jmp	0x590	; 0x590 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <adc_init>:
    }
	return 0;
}

void adc_init(void){
	ADMUX|=(1<<REFS0); //setting adc to compare with VCC pin;
  80:	ec e7       	ldi	r30, 0x7C	; 124
  82:	f0 e0       	ldi	r31, 0x00	; 0
  84:	80 81       	ld	r24, Z
  86:	80 64       	ori	r24, 0x40	; 64
  88:	80 83       	st	Z, r24
	ADCSRA|=(1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0); //enabling ADC and setting prescaler to 1/128
  8a:	ea e7       	ldi	r30, 0x7A	; 122
  8c:	f0 e0       	ldi	r31, 0x00	; 0
  8e:	80 81       	ld	r24, Z
  90:	87 68       	ori	r24, 0x87	; 135
  92:	80 83       	st	Z, r24
  94:	08 95       	ret

00000096 <read_adc>:
}
	
double read_adc(const uint8_t channel){
	ADMUX&=~(0x0F);
  96:	ec e7       	ldi	r30, 0x7C	; 124
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	90 81       	ld	r25, Z
  9c:	90 7f       	andi	r25, 0xF0	; 240
  9e:	90 83       	st	Z, r25
	ADMUX|=(0x0F & channel);
  a0:	90 81       	ld	r25, Z
  a2:	8f 70       	andi	r24, 0x0F	; 15
  a4:	98 2b       	or	r25, r24
  a6:	90 83       	st	Z, r25
	
	ADCSRA|=(1<<ADSC);
  a8:	ea e7       	ldi	r30, 0x7A	; 122
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	80 81       	ld	r24, Z
  ae:	80 64       	ori	r24, 0x40	; 64
  b0:	80 83       	st	Z, r24
	
	while((ADCSRA & 0x10)!=0x10){}
  b2:	80 81       	ld	r24, Z
  b4:	84 ff       	sbrs	r24, 4
  b6:	fd cf       	rjmp	.-6      	; 0xb2 <read_adc+0x1c>
		
	return ADCW;
  b8:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
  bc:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
  c0:	80 e0       	ldi	r24, 0x00	; 0
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	0e 94 ed 01 	call	0x3da	; 0x3da <__floatunsisf>
}
  c8:	08 95       	ret

000000ca <write_value>:

void write_value(const uint8_t value){
	PORTB=value>>6;
  ca:	98 2f       	mov	r25, r24
  cc:	92 95       	swap	r25
  ce:	96 95       	lsr	r25
  d0:	96 95       	lsr	r25
  d2:	93 70       	andi	r25, 0x03	; 3
  d4:	95 b9       	out	0x05, r25	; 5
	PORTD=value<<2;
  d6:	88 0f       	add	r24, r24
  d8:	88 0f       	add	r24, r24
  da:	8b b9       	out	0x0b, r24	; 11
  dc:	08 95       	ret

000000de <main>:
double read_adc(uint8_t channel);


int main(void)
{
	DDRB=0x03; //0b00000011
  de:	83 e0       	ldi	r24, 0x03	; 3
  e0:	84 b9       	out	0x04, r24	; 4
	DDRC=0x04; //0b00000000
  e2:	84 e0       	ldi	r24, 0x04	; 4
  e4:	87 b9       	out	0x07, r24	; 7
	DDRD=0xFC; //0b11111100
  e6:	8c ef       	ldi	r24, 0xFC	; 252
  e8:	8a b9       	out	0x0a, r24	; 10
	State actual=wait;
	double accumulator=0;
	uint8_t it=0, SAD=0;
	
	/*start_timer();*/
	adc_init();
  ea:	0e 94 40 00 	call	0x80	; 0x80 <adc_init>
	DDRC=0x04; //0b00000000
	DDRD=0xFC; //0b11111100
	
	State actual=wait;
	double accumulator=0;
	uint8_t it=0, SAD=0;
  ee:	91 2c       	mov	r9, r1
  f0:	f1 2c       	mov	r15, r1
	DDRB=0x03; //0b00000011
	DDRC=0x04; //0b00000000
	DDRD=0xFC; //0b11111100
	
	State actual=wait;
	double accumulator=0;
  f2:	00 e0       	ldi	r16, 0x00	; 0
  f4:	10 e0       	ldi	r17, 0x00	; 0
  f6:	d0 e0       	ldi	r29, 0x00	; 0
  f8:	31 2c       	mov	r3, r1
{
	DDRB=0x03; //0b00000011
	DDRC=0x04; //0b00000000
	DDRD=0xFC; //0b11111100
	
	State actual=wait;
  fa:	c0 e0       	ldi	r28, 0x00	; 0
				actual=where_to;
			break;
			
			case where_to:
				if(it<200){actual=increment;}
				else{actual=show;}
  fc:	68 94       	set
  fe:	22 24       	eor	r2, r2
 100:	22 f8       	bld	r2, 2
				SAD=round(accumulator/803);
				actual=wait;
			break;
			
			default:
				actual=wait;
 102:	e1 2c       	mov	r14, r1
			break;
			
			case increment:
				accumulator+=fabs(read_adc(0x00)-read_adc(0x01));
				it++;
				actual=where_to;
 104:	68 94       	set
 106:	dd 24       	eor	r13, r13
 108:	d1 f8       	bld	r13, 1
					PORTC&=~(0x04);
				}
			break;
			
			case zero:
				accumulator=0;
 10a:	a1 2c       	mov	r10, r1
 10c:	b1 2c       	mov	r11, r1
 10e:	c1 2c       	mov	r12, r1
 110:	81 2c       	mov	r8, r1
	/*start_timer();*/
	adc_init();
  
    while (1) 
    {
		switch(actual){
 112:	c2 30       	cpi	r28, 0x02	; 2
 114:	a1 f0       	breq	.+40     	; 0x13e <main+0x60>
 116:	30 f4       	brcc	.+12     	; 0x124 <main+0x46>
 118:	cc 23       	and	r28, r28
 11a:	51 f0       	breq	.+20     	; 0x130 <main+0x52>
 11c:	c1 30       	cpi	r28, 0x01	; 1
 11e:	09 f4       	brne	.+2      	; 0x122 <main+0x44>
 120:	42 c0       	rjmp	.+132    	; 0x1a6 <main+0xc8>
 122:	04 c0       	rjmp	.+8      	; 0x12c <main+0x4e>
 124:	c3 30       	cpi	r28, 0x03	; 3
 126:	81 f0       	breq	.+32     	; 0x148 <main+0x6a>
 128:	c4 30       	cpi	r28, 0x04	; 4
 12a:	61 f1       	breq	.+88     	; 0x184 <main+0xa6>
				SAD=round(accumulator/803);
				actual=wait;
			break;
			
			default:
				actual=wait;
 12c:	ce 2d       	mov	r28, r14
 12e:	43 c0       	rjmp	.+134    	; 0x1b6 <main+0xd8>
  
    while (1) 
    {
		switch(actual){
			case wait:
				if((PINC & 0x10)==0x10){
 130:	34 9b       	sbis	0x06, 4	; 6
 132:	03 c0       	rjmp	.+6      	; 0x13a <main+0x5c>
					actual=zero;
					PORTC|=0x04;
 134:	42 9a       	sbi	0x08, 2	; 8
    while (1) 
    {
		switch(actual){
			case wait:
				if((PINC & 0x10)==0x10){
					actual=zero;
 136:	c1 e0       	ldi	r28, 0x01	; 1
 138:	3e c0       	rjmp	.+124    	; 0x1b6 <main+0xd8>
					PORTC|=0x04;
				}
				else{
					actual=wait;
					PORTC&=~(0x04);
 13a:	42 98       	cbi	0x08, 2	; 8
 13c:	3c c0       	rjmp	.+120    	; 0x1b6 <main+0xd8>
				it=0;
				actual=where_to;
			break;
			
			case where_to:
				if(it<200){actual=increment;}
 13e:	87 ec       	ldi	r24, 0xC7	; 199
 140:	8f 15       	cp	r24, r15
 142:	c0 f5       	brcc	.+112    	; 0x1b4 <main+0xd6>
				else{actual=show;}
 144:	c2 2d       	mov	r28, r2
 146:	37 c0       	rjmp	.+110    	; 0x1b6 <main+0xd8>
			break;
			
			case increment:
				accumulator+=fabs(read_adc(0x00)-read_adc(0x01));
 148:	8e 2d       	mov	r24, r14
 14a:	0e 94 4b 00 	call	0x96	; 0x96 <read_adc>
 14e:	2b 01       	movw	r4, r22
 150:	3c 01       	movw	r6, r24
 152:	81 e0       	ldi	r24, 0x01	; 1
 154:	0e 94 4b 00 	call	0x96	; 0x96 <read_adc>
 158:	9b 01       	movw	r18, r22
 15a:	ac 01       	movw	r20, r24
 15c:	c3 01       	movw	r24, r6
 15e:	b2 01       	movw	r22, r4
 160:	0e 94 df 00 	call	0x1be	; 0x1be <__subsf3>
 164:	9b 01       	movw	r18, r22
 166:	ac 01       	movw	r20, r24
 168:	5f 77       	andi	r21, 0x7F	; 127
 16a:	60 2f       	mov	r22, r16
 16c:	71 2f       	mov	r23, r17
 16e:	8d 2f       	mov	r24, r29
 170:	93 2d       	mov	r25, r3
 172:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <__addsf3>
 176:	06 2f       	mov	r16, r22
 178:	17 2f       	mov	r17, r23
 17a:	d8 2f       	mov	r29, r24
 17c:	39 2e       	mov	r3, r25
				it++;
 17e:	f3 94       	inc	r15
				actual=where_to;
 180:	cd 2d       	mov	r28, r13
			break;
 182:	19 c0       	rjmp	.+50     	; 0x1b6 <main+0xd8>
			
			case show:
				SAD=round(accumulator/803);
 184:	20 e0       	ldi	r18, 0x00	; 0
 186:	30 ec       	ldi	r19, 0xC0	; 192
 188:	48 e4       	ldi	r20, 0x48	; 72
 18a:	54 e4       	ldi	r21, 0x44	; 68
 18c:	60 2f       	mov	r22, r16
 18e:	71 2f       	mov	r23, r17
 190:	8d 2f       	mov	r24, r29
 192:	93 2d       	mov	r25, r3
 194:	0e 94 4c 01 	call	0x298	; 0x298 <__divsf3>
 198:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <round>
 19c:	0e 94 be 01 	call	0x37c	; 0x37c <__fixunssfsi>
 1a0:	96 2e       	mov	r9, r22
				actual=wait;
 1a2:	ce 2d       	mov	r28, r14
			break;
 1a4:	08 c0       	rjmp	.+16     	; 0x1b6 <main+0xd8>
				}
			break;
			
			case zero:
				accumulator=0;
				it=0;
 1a6:	f1 2c       	mov	r15, r1
					PORTC&=~(0x04);
				}
			break;
			
			case zero:
				accumulator=0;
 1a8:	0a 2d       	mov	r16, r10
 1aa:	1b 2d       	mov	r17, r11
 1ac:	dc 2d       	mov	r29, r12
 1ae:	38 2c       	mov	r3, r8
				it=0;
				actual=where_to;
 1b0:	cd 2d       	mov	r28, r13
 1b2:	01 c0       	rjmp	.+2      	; 0x1b6 <main+0xd8>
			break;
			
			case where_to:
				if(it<200){actual=increment;}
 1b4:	c3 e0       	ldi	r28, 0x03	; 3
			
			default:
				actual=wait;
			break;
		}
		write_value(SAD);
 1b6:	89 2d       	mov	r24, r9
 1b8:	0e 94 65 00 	call	0xca	; 0xca <write_value>
    }
 1bc:	aa cf       	rjmp	.-172    	; 0x112 <main+0x34>

000001be <__subsf3>:
 1be:	50 58       	subi	r21, 0x80	; 128

000001c0 <__addsf3>:
 1c0:	bb 27       	eor	r27, r27
 1c2:	aa 27       	eor	r26, r26
 1c4:	0e 94 f7 00 	call	0x1ee	; 0x1ee <__addsf3x>
 1c8:	0c 94 41 02 	jmp	0x482	; 0x482 <__fp_round>
 1cc:	0e 94 33 02 	call	0x466	; 0x466 <__fp_pscA>
 1d0:	38 f0       	brcs	.+14     	; 0x1e0 <__addsf3+0x20>
 1d2:	0e 94 3a 02 	call	0x474	; 0x474 <__fp_pscB>
 1d6:	20 f0       	brcs	.+8      	; 0x1e0 <__addsf3+0x20>
 1d8:	39 f4       	brne	.+14     	; 0x1e8 <__addsf3+0x28>
 1da:	9f 3f       	cpi	r25, 0xFF	; 255
 1dc:	19 f4       	brne	.+6      	; 0x1e4 <__addsf3+0x24>
 1de:	26 f4       	brtc	.+8      	; 0x1e8 <__addsf3+0x28>
 1e0:	0c 94 30 02 	jmp	0x460	; 0x460 <__fp_nan>
 1e4:	0e f4       	brtc	.+2      	; 0x1e8 <__addsf3+0x28>
 1e6:	e0 95       	com	r30
 1e8:	e7 fb       	bst	r30, 7
 1ea:	0c 94 2a 02 	jmp	0x454	; 0x454 <__fp_inf>

000001ee <__addsf3x>:
 1ee:	e9 2f       	mov	r30, r25
 1f0:	0e 94 52 02 	call	0x4a4	; 0x4a4 <__fp_split3>
 1f4:	58 f3       	brcs	.-42     	; 0x1cc <__addsf3+0xc>
 1f6:	ba 17       	cp	r27, r26
 1f8:	62 07       	cpc	r22, r18
 1fa:	73 07       	cpc	r23, r19
 1fc:	84 07       	cpc	r24, r20
 1fe:	95 07       	cpc	r25, r21
 200:	20 f0       	brcs	.+8      	; 0x20a <__addsf3x+0x1c>
 202:	79 f4       	brne	.+30     	; 0x222 <__addsf3x+0x34>
 204:	a6 f5       	brtc	.+104    	; 0x26e <__addsf3x+0x80>
 206:	0c 94 74 02 	jmp	0x4e8	; 0x4e8 <__fp_zero>
 20a:	0e f4       	brtc	.+2      	; 0x20e <__addsf3x+0x20>
 20c:	e0 95       	com	r30
 20e:	0b 2e       	mov	r0, r27
 210:	ba 2f       	mov	r27, r26
 212:	a0 2d       	mov	r26, r0
 214:	0b 01       	movw	r0, r22
 216:	b9 01       	movw	r22, r18
 218:	90 01       	movw	r18, r0
 21a:	0c 01       	movw	r0, r24
 21c:	ca 01       	movw	r24, r20
 21e:	a0 01       	movw	r20, r0
 220:	11 24       	eor	r1, r1
 222:	ff 27       	eor	r31, r31
 224:	59 1b       	sub	r21, r25
 226:	99 f0       	breq	.+38     	; 0x24e <__addsf3x+0x60>
 228:	59 3f       	cpi	r21, 0xF9	; 249
 22a:	50 f4       	brcc	.+20     	; 0x240 <__addsf3x+0x52>
 22c:	50 3e       	cpi	r21, 0xE0	; 224
 22e:	68 f1       	brcs	.+90     	; 0x28a <__addsf3x+0x9c>
 230:	1a 16       	cp	r1, r26
 232:	f0 40       	sbci	r31, 0x00	; 0
 234:	a2 2f       	mov	r26, r18
 236:	23 2f       	mov	r18, r19
 238:	34 2f       	mov	r19, r20
 23a:	44 27       	eor	r20, r20
 23c:	58 5f       	subi	r21, 0xF8	; 248
 23e:	f3 cf       	rjmp	.-26     	; 0x226 <__addsf3x+0x38>
 240:	46 95       	lsr	r20
 242:	37 95       	ror	r19
 244:	27 95       	ror	r18
 246:	a7 95       	ror	r26
 248:	f0 40       	sbci	r31, 0x00	; 0
 24a:	53 95       	inc	r21
 24c:	c9 f7       	brne	.-14     	; 0x240 <__addsf3x+0x52>
 24e:	7e f4       	brtc	.+30     	; 0x26e <__addsf3x+0x80>
 250:	1f 16       	cp	r1, r31
 252:	ba 0b       	sbc	r27, r26
 254:	62 0b       	sbc	r22, r18
 256:	73 0b       	sbc	r23, r19
 258:	84 0b       	sbc	r24, r20
 25a:	ba f0       	brmi	.+46     	; 0x28a <__addsf3x+0x9c>
 25c:	91 50       	subi	r25, 0x01	; 1
 25e:	a1 f0       	breq	.+40     	; 0x288 <__addsf3x+0x9a>
 260:	ff 0f       	add	r31, r31
 262:	bb 1f       	adc	r27, r27
 264:	66 1f       	adc	r22, r22
 266:	77 1f       	adc	r23, r23
 268:	88 1f       	adc	r24, r24
 26a:	c2 f7       	brpl	.-16     	; 0x25c <__addsf3x+0x6e>
 26c:	0e c0       	rjmp	.+28     	; 0x28a <__addsf3x+0x9c>
 26e:	ba 0f       	add	r27, r26
 270:	62 1f       	adc	r22, r18
 272:	73 1f       	adc	r23, r19
 274:	84 1f       	adc	r24, r20
 276:	48 f4       	brcc	.+18     	; 0x28a <__addsf3x+0x9c>
 278:	87 95       	ror	r24
 27a:	77 95       	ror	r23
 27c:	67 95       	ror	r22
 27e:	b7 95       	ror	r27
 280:	f7 95       	ror	r31
 282:	9e 3f       	cpi	r25, 0xFE	; 254
 284:	08 f0       	brcs	.+2      	; 0x288 <__addsf3x+0x9a>
 286:	b0 cf       	rjmp	.-160    	; 0x1e8 <__addsf3+0x28>
 288:	93 95       	inc	r25
 28a:	88 0f       	add	r24, r24
 28c:	08 f0       	brcs	.+2      	; 0x290 <__addsf3x+0xa2>
 28e:	99 27       	eor	r25, r25
 290:	ee 0f       	add	r30, r30
 292:	97 95       	ror	r25
 294:	87 95       	ror	r24
 296:	08 95       	ret

00000298 <__divsf3>:
 298:	0e 94 60 01 	call	0x2c0	; 0x2c0 <__divsf3x>
 29c:	0c 94 41 02 	jmp	0x482	; 0x482 <__fp_round>
 2a0:	0e 94 3a 02 	call	0x474	; 0x474 <__fp_pscB>
 2a4:	58 f0       	brcs	.+22     	; 0x2bc <__divsf3+0x24>
 2a6:	0e 94 33 02 	call	0x466	; 0x466 <__fp_pscA>
 2aa:	40 f0       	brcs	.+16     	; 0x2bc <__divsf3+0x24>
 2ac:	29 f4       	brne	.+10     	; 0x2b8 <__divsf3+0x20>
 2ae:	5f 3f       	cpi	r21, 0xFF	; 255
 2b0:	29 f0       	breq	.+10     	; 0x2bc <__divsf3+0x24>
 2b2:	0c 94 2a 02 	jmp	0x454	; 0x454 <__fp_inf>
 2b6:	51 11       	cpse	r21, r1
 2b8:	0c 94 75 02 	jmp	0x4ea	; 0x4ea <__fp_szero>
 2bc:	0c 94 30 02 	jmp	0x460	; 0x460 <__fp_nan>

000002c0 <__divsf3x>:
 2c0:	0e 94 52 02 	call	0x4a4	; 0x4a4 <__fp_split3>
 2c4:	68 f3       	brcs	.-38     	; 0x2a0 <__divsf3+0x8>

000002c6 <__divsf3_pse>:
 2c6:	99 23       	and	r25, r25
 2c8:	b1 f3       	breq	.-20     	; 0x2b6 <__divsf3+0x1e>
 2ca:	55 23       	and	r21, r21
 2cc:	91 f3       	breq	.-28     	; 0x2b2 <__divsf3+0x1a>
 2ce:	95 1b       	sub	r25, r21
 2d0:	55 0b       	sbc	r21, r21
 2d2:	bb 27       	eor	r27, r27
 2d4:	aa 27       	eor	r26, r26
 2d6:	62 17       	cp	r22, r18
 2d8:	73 07       	cpc	r23, r19
 2da:	84 07       	cpc	r24, r20
 2dc:	38 f0       	brcs	.+14     	; 0x2ec <__divsf3_pse+0x26>
 2de:	9f 5f       	subi	r25, 0xFF	; 255
 2e0:	5f 4f       	sbci	r21, 0xFF	; 255
 2e2:	22 0f       	add	r18, r18
 2e4:	33 1f       	adc	r19, r19
 2e6:	44 1f       	adc	r20, r20
 2e8:	aa 1f       	adc	r26, r26
 2ea:	a9 f3       	breq	.-22     	; 0x2d6 <__divsf3_pse+0x10>
 2ec:	35 d0       	rcall	.+106    	; 0x358 <__divsf3_pse+0x92>
 2ee:	0e 2e       	mov	r0, r30
 2f0:	3a f0       	brmi	.+14     	; 0x300 <__divsf3_pse+0x3a>
 2f2:	e0 e8       	ldi	r30, 0x80	; 128
 2f4:	32 d0       	rcall	.+100    	; 0x35a <__divsf3_pse+0x94>
 2f6:	91 50       	subi	r25, 0x01	; 1
 2f8:	50 40       	sbci	r21, 0x00	; 0
 2fa:	e6 95       	lsr	r30
 2fc:	00 1c       	adc	r0, r0
 2fe:	ca f7       	brpl	.-14     	; 0x2f2 <__divsf3_pse+0x2c>
 300:	2b d0       	rcall	.+86     	; 0x358 <__divsf3_pse+0x92>
 302:	fe 2f       	mov	r31, r30
 304:	29 d0       	rcall	.+82     	; 0x358 <__divsf3_pse+0x92>
 306:	66 0f       	add	r22, r22
 308:	77 1f       	adc	r23, r23
 30a:	88 1f       	adc	r24, r24
 30c:	bb 1f       	adc	r27, r27
 30e:	26 17       	cp	r18, r22
 310:	37 07       	cpc	r19, r23
 312:	48 07       	cpc	r20, r24
 314:	ab 07       	cpc	r26, r27
 316:	b0 e8       	ldi	r27, 0x80	; 128
 318:	09 f0       	breq	.+2      	; 0x31c <__divsf3_pse+0x56>
 31a:	bb 0b       	sbc	r27, r27
 31c:	80 2d       	mov	r24, r0
 31e:	bf 01       	movw	r22, r30
 320:	ff 27       	eor	r31, r31
 322:	93 58       	subi	r25, 0x83	; 131
 324:	5f 4f       	sbci	r21, 0xFF	; 255
 326:	3a f0       	brmi	.+14     	; 0x336 <__divsf3_pse+0x70>
 328:	9e 3f       	cpi	r25, 0xFE	; 254
 32a:	51 05       	cpc	r21, r1
 32c:	78 f0       	brcs	.+30     	; 0x34c <__divsf3_pse+0x86>
 32e:	0c 94 2a 02 	jmp	0x454	; 0x454 <__fp_inf>
 332:	0c 94 75 02 	jmp	0x4ea	; 0x4ea <__fp_szero>
 336:	5f 3f       	cpi	r21, 0xFF	; 255
 338:	e4 f3       	brlt	.-8      	; 0x332 <__divsf3_pse+0x6c>
 33a:	98 3e       	cpi	r25, 0xE8	; 232
 33c:	d4 f3       	brlt	.-12     	; 0x332 <__divsf3_pse+0x6c>
 33e:	86 95       	lsr	r24
 340:	77 95       	ror	r23
 342:	67 95       	ror	r22
 344:	b7 95       	ror	r27
 346:	f7 95       	ror	r31
 348:	9f 5f       	subi	r25, 0xFF	; 255
 34a:	c9 f7       	brne	.-14     	; 0x33e <__divsf3_pse+0x78>
 34c:	88 0f       	add	r24, r24
 34e:	91 1d       	adc	r25, r1
 350:	96 95       	lsr	r25
 352:	87 95       	ror	r24
 354:	97 f9       	bld	r25, 7
 356:	08 95       	ret
 358:	e1 e0       	ldi	r30, 0x01	; 1
 35a:	66 0f       	add	r22, r22
 35c:	77 1f       	adc	r23, r23
 35e:	88 1f       	adc	r24, r24
 360:	bb 1f       	adc	r27, r27
 362:	62 17       	cp	r22, r18
 364:	73 07       	cpc	r23, r19
 366:	84 07       	cpc	r24, r20
 368:	ba 07       	cpc	r27, r26
 36a:	20 f0       	brcs	.+8      	; 0x374 <__divsf3_pse+0xae>
 36c:	62 1b       	sub	r22, r18
 36e:	73 0b       	sbc	r23, r19
 370:	84 0b       	sbc	r24, r20
 372:	ba 0b       	sbc	r27, r26
 374:	ee 1f       	adc	r30, r30
 376:	88 f7       	brcc	.-30     	; 0x35a <__divsf3_pse+0x94>
 378:	e0 95       	com	r30
 37a:	08 95       	ret

0000037c <__fixunssfsi>:
 37c:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <__fp_splitA>
 380:	88 f0       	brcs	.+34     	; 0x3a4 <__fixunssfsi+0x28>
 382:	9f 57       	subi	r25, 0x7F	; 127
 384:	98 f0       	brcs	.+38     	; 0x3ac <__fixunssfsi+0x30>
 386:	b9 2f       	mov	r27, r25
 388:	99 27       	eor	r25, r25
 38a:	b7 51       	subi	r27, 0x17	; 23
 38c:	b0 f0       	brcs	.+44     	; 0x3ba <__fixunssfsi+0x3e>
 38e:	e1 f0       	breq	.+56     	; 0x3c8 <__fixunssfsi+0x4c>
 390:	66 0f       	add	r22, r22
 392:	77 1f       	adc	r23, r23
 394:	88 1f       	adc	r24, r24
 396:	99 1f       	adc	r25, r25
 398:	1a f0       	brmi	.+6      	; 0x3a0 <__fixunssfsi+0x24>
 39a:	ba 95       	dec	r27
 39c:	c9 f7       	brne	.-14     	; 0x390 <__fixunssfsi+0x14>
 39e:	14 c0       	rjmp	.+40     	; 0x3c8 <__fixunssfsi+0x4c>
 3a0:	b1 30       	cpi	r27, 0x01	; 1
 3a2:	91 f0       	breq	.+36     	; 0x3c8 <__fixunssfsi+0x4c>
 3a4:	0e 94 74 02 	call	0x4e8	; 0x4e8 <__fp_zero>
 3a8:	b1 e0       	ldi	r27, 0x01	; 1
 3aa:	08 95       	ret
 3ac:	0c 94 74 02 	jmp	0x4e8	; 0x4e8 <__fp_zero>
 3b0:	67 2f       	mov	r22, r23
 3b2:	78 2f       	mov	r23, r24
 3b4:	88 27       	eor	r24, r24
 3b6:	b8 5f       	subi	r27, 0xF8	; 248
 3b8:	39 f0       	breq	.+14     	; 0x3c8 <__fixunssfsi+0x4c>
 3ba:	b9 3f       	cpi	r27, 0xF9	; 249
 3bc:	cc f3       	brlt	.-14     	; 0x3b0 <__fixunssfsi+0x34>
 3be:	86 95       	lsr	r24
 3c0:	77 95       	ror	r23
 3c2:	67 95       	ror	r22
 3c4:	b3 95       	inc	r27
 3c6:	d9 f7       	brne	.-10     	; 0x3be <__fixunssfsi+0x42>
 3c8:	3e f4       	brtc	.+14     	; 0x3d8 <__fixunssfsi+0x5c>
 3ca:	90 95       	com	r25
 3cc:	80 95       	com	r24
 3ce:	70 95       	com	r23
 3d0:	61 95       	neg	r22
 3d2:	7f 4f       	sbci	r23, 0xFF	; 255
 3d4:	8f 4f       	sbci	r24, 0xFF	; 255
 3d6:	9f 4f       	sbci	r25, 0xFF	; 255
 3d8:	08 95       	ret

000003da <__floatunsisf>:
 3da:	e8 94       	clt
 3dc:	09 c0       	rjmp	.+18     	; 0x3f0 <__floatsisf+0x12>

000003de <__floatsisf>:
 3de:	97 fb       	bst	r25, 7
 3e0:	3e f4       	brtc	.+14     	; 0x3f0 <__floatsisf+0x12>
 3e2:	90 95       	com	r25
 3e4:	80 95       	com	r24
 3e6:	70 95       	com	r23
 3e8:	61 95       	neg	r22
 3ea:	7f 4f       	sbci	r23, 0xFF	; 255
 3ec:	8f 4f       	sbci	r24, 0xFF	; 255
 3ee:	9f 4f       	sbci	r25, 0xFF	; 255
 3f0:	99 23       	and	r25, r25
 3f2:	a9 f0       	breq	.+42     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 3f4:	f9 2f       	mov	r31, r25
 3f6:	96 e9       	ldi	r25, 0x96	; 150
 3f8:	bb 27       	eor	r27, r27
 3fa:	93 95       	inc	r25
 3fc:	f6 95       	lsr	r31
 3fe:	87 95       	ror	r24
 400:	77 95       	ror	r23
 402:	67 95       	ror	r22
 404:	b7 95       	ror	r27
 406:	f1 11       	cpse	r31, r1
 408:	f8 cf       	rjmp	.-16     	; 0x3fa <__floatsisf+0x1c>
 40a:	fa f4       	brpl	.+62     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 40c:	bb 0f       	add	r27, r27
 40e:	11 f4       	brne	.+4      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 410:	60 ff       	sbrs	r22, 0
 412:	1b c0       	rjmp	.+54     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 414:	6f 5f       	subi	r22, 0xFF	; 255
 416:	7f 4f       	sbci	r23, 0xFF	; 255
 418:	8f 4f       	sbci	r24, 0xFF	; 255
 41a:	9f 4f       	sbci	r25, 0xFF	; 255
 41c:	16 c0       	rjmp	.+44     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 41e:	88 23       	and	r24, r24
 420:	11 f0       	breq	.+4      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 422:	96 e9       	ldi	r25, 0x96	; 150
 424:	11 c0       	rjmp	.+34     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 426:	77 23       	and	r23, r23
 428:	21 f0       	breq	.+8      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 42a:	9e e8       	ldi	r25, 0x8E	; 142
 42c:	87 2f       	mov	r24, r23
 42e:	76 2f       	mov	r23, r22
 430:	05 c0       	rjmp	.+10     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 432:	66 23       	and	r22, r22
 434:	71 f0       	breq	.+28     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 436:	96 e8       	ldi	r25, 0x86	; 134
 438:	86 2f       	mov	r24, r22
 43a:	70 e0       	ldi	r23, 0x00	; 0
 43c:	60 e0       	ldi	r22, 0x00	; 0
 43e:	2a f0       	brmi	.+10     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 440:	9a 95       	dec	r25
 442:	66 0f       	add	r22, r22
 444:	77 1f       	adc	r23, r23
 446:	88 1f       	adc	r24, r24
 448:	da f7       	brpl	.-10     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 44a:	88 0f       	add	r24, r24
 44c:	96 95       	lsr	r25
 44e:	87 95       	ror	r24
 450:	97 f9       	bld	r25, 7
 452:	08 95       	ret

00000454 <__fp_inf>:
 454:	97 f9       	bld	r25, 7
 456:	9f 67       	ori	r25, 0x7F	; 127
 458:	80 e8       	ldi	r24, 0x80	; 128
 45a:	70 e0       	ldi	r23, 0x00	; 0
 45c:	60 e0       	ldi	r22, 0x00	; 0
 45e:	08 95       	ret

00000460 <__fp_nan>:
 460:	9f ef       	ldi	r25, 0xFF	; 255
 462:	80 ec       	ldi	r24, 0xC0	; 192
 464:	08 95       	ret

00000466 <__fp_pscA>:
 466:	00 24       	eor	r0, r0
 468:	0a 94       	dec	r0
 46a:	16 16       	cp	r1, r22
 46c:	17 06       	cpc	r1, r23
 46e:	18 06       	cpc	r1, r24
 470:	09 06       	cpc	r0, r25
 472:	08 95       	ret

00000474 <__fp_pscB>:
 474:	00 24       	eor	r0, r0
 476:	0a 94       	dec	r0
 478:	12 16       	cp	r1, r18
 47a:	13 06       	cpc	r1, r19
 47c:	14 06       	cpc	r1, r20
 47e:	05 06       	cpc	r0, r21
 480:	08 95       	ret

00000482 <__fp_round>:
 482:	09 2e       	mov	r0, r25
 484:	03 94       	inc	r0
 486:	00 0c       	add	r0, r0
 488:	11 f4       	brne	.+4      	; 0x48e <__fp_round+0xc>
 48a:	88 23       	and	r24, r24
 48c:	52 f0       	brmi	.+20     	; 0x4a2 <__fp_round+0x20>
 48e:	bb 0f       	add	r27, r27
 490:	40 f4       	brcc	.+16     	; 0x4a2 <__fp_round+0x20>
 492:	bf 2b       	or	r27, r31
 494:	11 f4       	brne	.+4      	; 0x49a <__fp_round+0x18>
 496:	60 ff       	sbrs	r22, 0
 498:	04 c0       	rjmp	.+8      	; 0x4a2 <__fp_round+0x20>
 49a:	6f 5f       	subi	r22, 0xFF	; 255
 49c:	7f 4f       	sbci	r23, 0xFF	; 255
 49e:	8f 4f       	sbci	r24, 0xFF	; 255
 4a0:	9f 4f       	sbci	r25, 0xFF	; 255
 4a2:	08 95       	ret

000004a4 <__fp_split3>:
 4a4:	57 fd       	sbrc	r21, 7
 4a6:	90 58       	subi	r25, 0x80	; 128
 4a8:	44 0f       	add	r20, r20
 4aa:	55 1f       	adc	r21, r21
 4ac:	59 f0       	breq	.+22     	; 0x4c4 <__fp_splitA+0x10>
 4ae:	5f 3f       	cpi	r21, 0xFF	; 255
 4b0:	71 f0       	breq	.+28     	; 0x4ce <__fp_splitA+0x1a>
 4b2:	47 95       	ror	r20

000004b4 <__fp_splitA>:
 4b4:	88 0f       	add	r24, r24
 4b6:	97 fb       	bst	r25, 7
 4b8:	99 1f       	adc	r25, r25
 4ba:	61 f0       	breq	.+24     	; 0x4d4 <__fp_splitA+0x20>
 4bc:	9f 3f       	cpi	r25, 0xFF	; 255
 4be:	79 f0       	breq	.+30     	; 0x4de <__fp_splitA+0x2a>
 4c0:	87 95       	ror	r24
 4c2:	08 95       	ret
 4c4:	12 16       	cp	r1, r18
 4c6:	13 06       	cpc	r1, r19
 4c8:	14 06       	cpc	r1, r20
 4ca:	55 1f       	adc	r21, r21
 4cc:	f2 cf       	rjmp	.-28     	; 0x4b2 <__fp_split3+0xe>
 4ce:	46 95       	lsr	r20
 4d0:	f1 df       	rcall	.-30     	; 0x4b4 <__fp_splitA>
 4d2:	08 c0       	rjmp	.+16     	; 0x4e4 <__fp_splitA+0x30>
 4d4:	16 16       	cp	r1, r22
 4d6:	17 06       	cpc	r1, r23
 4d8:	18 06       	cpc	r1, r24
 4da:	99 1f       	adc	r25, r25
 4dc:	f1 cf       	rjmp	.-30     	; 0x4c0 <__fp_splitA+0xc>
 4de:	86 95       	lsr	r24
 4e0:	71 05       	cpc	r23, r1
 4e2:	61 05       	cpc	r22, r1
 4e4:	08 94       	sec
 4e6:	08 95       	ret

000004e8 <__fp_zero>:
 4e8:	e8 94       	clt

000004ea <__fp_szero>:
 4ea:	bb 27       	eor	r27, r27
 4ec:	66 27       	eor	r22, r22
 4ee:	77 27       	eor	r23, r23
 4f0:	cb 01       	movw	r24, r22
 4f2:	97 f9       	bld	r25, 7
 4f4:	08 95       	ret

000004f6 <round>:
 4f6:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <__fp_splitA>
 4fa:	e8 f0       	brcs	.+58     	; 0x536 <round+0x40>
 4fc:	9e 37       	cpi	r25, 0x7E	; 126
 4fe:	e8 f0       	brcs	.+58     	; 0x53a <round+0x44>
 500:	96 39       	cpi	r25, 0x96	; 150
 502:	b8 f4       	brcc	.+46     	; 0x532 <round+0x3c>
 504:	9e 38       	cpi	r25, 0x8E	; 142
 506:	48 f4       	brcc	.+18     	; 0x51a <round+0x24>
 508:	67 2f       	mov	r22, r23
 50a:	78 2f       	mov	r23, r24
 50c:	88 27       	eor	r24, r24
 50e:	98 5f       	subi	r25, 0xF8	; 248
 510:	f9 cf       	rjmp	.-14     	; 0x504 <round+0xe>
 512:	86 95       	lsr	r24
 514:	77 95       	ror	r23
 516:	67 95       	ror	r22
 518:	93 95       	inc	r25
 51a:	95 39       	cpi	r25, 0x95	; 149
 51c:	d0 f3       	brcs	.-12     	; 0x512 <round+0x1c>
 51e:	b6 2f       	mov	r27, r22
 520:	b1 70       	andi	r27, 0x01	; 1
 522:	6b 0f       	add	r22, r27
 524:	71 1d       	adc	r23, r1
 526:	81 1d       	adc	r24, r1
 528:	20 f4       	brcc	.+8      	; 0x532 <round+0x3c>
 52a:	87 95       	ror	r24
 52c:	77 95       	ror	r23
 52e:	67 95       	ror	r22
 530:	93 95       	inc	r25
 532:	0c 94 9f 02 	jmp	0x53e	; 0x53e <__fp_mintl>
 536:	0c 94 ba 02 	jmp	0x574	; 0x574 <__fp_mpack>
 53a:	0c 94 75 02 	jmp	0x4ea	; 0x4ea <__fp_szero>

0000053e <__fp_mintl>:
 53e:	88 23       	and	r24, r24
 540:	71 f4       	brne	.+28     	; 0x55e <__fp_mintl+0x20>
 542:	77 23       	and	r23, r23
 544:	21 f0       	breq	.+8      	; 0x54e <__fp_mintl+0x10>
 546:	98 50       	subi	r25, 0x08	; 8
 548:	87 2b       	or	r24, r23
 54a:	76 2f       	mov	r23, r22
 54c:	07 c0       	rjmp	.+14     	; 0x55c <__fp_mintl+0x1e>
 54e:	66 23       	and	r22, r22
 550:	11 f4       	brne	.+4      	; 0x556 <__fp_mintl+0x18>
 552:	99 27       	eor	r25, r25
 554:	0d c0       	rjmp	.+26     	; 0x570 <__fp_mintl+0x32>
 556:	90 51       	subi	r25, 0x10	; 16
 558:	86 2b       	or	r24, r22
 55a:	70 e0       	ldi	r23, 0x00	; 0
 55c:	60 e0       	ldi	r22, 0x00	; 0
 55e:	2a f0       	brmi	.+10     	; 0x56a <__fp_mintl+0x2c>
 560:	9a 95       	dec	r25
 562:	66 0f       	add	r22, r22
 564:	77 1f       	adc	r23, r23
 566:	88 1f       	adc	r24, r24
 568:	da f7       	brpl	.-10     	; 0x560 <__fp_mintl+0x22>
 56a:	88 0f       	add	r24, r24
 56c:	96 95       	lsr	r25
 56e:	87 95       	ror	r24
 570:	97 f9       	bld	r25, 7
 572:	08 95       	ret

00000574 <__fp_mpack>:
 574:	9f 3f       	cpi	r25, 0xFF	; 255
 576:	31 f0       	breq	.+12     	; 0x584 <__fp_mpack_finite+0xc>

00000578 <__fp_mpack_finite>:
 578:	91 50       	subi	r25, 0x01	; 1
 57a:	20 f4       	brcc	.+8      	; 0x584 <__fp_mpack_finite+0xc>
 57c:	87 95       	ror	r24
 57e:	77 95       	ror	r23
 580:	67 95       	ror	r22
 582:	b7 95       	ror	r27
 584:	88 0f       	add	r24, r24
 586:	91 1d       	adc	r25, r1
 588:	96 95       	lsr	r25
 58a:	87 95       	ror	r24
 58c:	97 f9       	bld	r25, 7
 58e:	08 95       	ret

00000590 <_exit>:
 590:	f8 94       	cli

00000592 <__stop_program>:
 592:	ff cf       	rjmp	.-2      	; 0x592 <__stop_program>
