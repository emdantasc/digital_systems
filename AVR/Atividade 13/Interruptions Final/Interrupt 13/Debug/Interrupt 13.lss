
Interrupt 13.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000898  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000824  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  00800100  00800100  00000898  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000898  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008c8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000908  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000864  00000000  00000000  00000960  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006cd  00000000  00000000  000011c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003c7  00000000  00000000  00001891  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000dc  00000000  00000000  00001c58  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003a0  00000000  00000000  00001d34  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000ec  00000000  00000000  000020d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  000021c0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 43 00 	jmp	0x86	; 0x86 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__vector_11>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	05 a8       	ldd	r0, Z+53	; 0x35
  6a:	4c cd       	rjmp	.-1384   	; 0xfffffb04 <__eeprom_end+0xff7efb04>
  6c:	b2 d4       	rcall	.+2404   	; 0x9d2 <__stack+0xd3>
  6e:	4e b9       	out	0x0e, r20	; 14
  70:	38 36       	cpi	r19, 0x68	; 104
  72:	a9 02       	muls	r26, r25
  74:	0c 50       	subi	r16, 0x0C	; 12
  76:	b9 91       	ld	r27, Y+
  78:	86 88       	ldd	r8, Z+22	; 0x16
  7a:	08 3c       	cpi	r16, 0xC8	; 200
  7c:	a6 aa       	std	Z+54, r10	; 0x36
  7e:	aa 2a       	or	r10, r26
  80:	be 00       	.word	0x00be	; ????
  82:	00 00       	nop
  84:	80 3f       	cpi	r24, 0xF0	; 240

00000086 <__ctors_end>:
  86:	11 24       	eor	r1, r1
  88:	1f be       	out	0x3f, r1	; 63
  8a:	cf ef       	ldi	r28, 0xFF	; 255
  8c:	d8 e0       	ldi	r29, 0x08	; 8
  8e:	de bf       	out	0x3e, r29	; 62
  90:	cd bf       	out	0x3d, r28	; 61

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a0 e0       	ldi	r26, 0x00	; 0
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a3 30       	cpi	r26, 0x03	; 3
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 a6 00 	call	0x14c	; 0x14c <main>
  a6:	0c 94 10 04 	jmp	0x820	; 0x820 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <start_timer>:

	return 0;
};

void start_timer(void){
	OCR1A=0x0CFF;
  ae:	8f ef       	ldi	r24, 0xFF	; 255
  b0:	9c e0       	ldi	r25, 0x0C	; 12
  b2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  b6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	TCCR1B|=(1<<WGM12)|(1<<CS10);
  ba:	e1 e8       	ldi	r30, 0x81	; 129
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	80 81       	ld	r24, Z
  c0:	89 60       	ori	r24, 0x09	; 9
  c2:	80 83       	st	Z, r24
	TIMSK1|=(1<<OCIE1A);
  c4:	ef e6       	ldi	r30, 0x6F	; 111
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	80 81       	ld	r24, Z
  ca:	82 60       	ori	r24, 0x02	; 2
  cc:	80 83       	st	Z, r24
	sei();
  ce:	78 94       	sei
  d0:	08 95       	ret

000000d2 <stop_timer>:
}

void stop_timer(void){
	TCCR1B&=(0<<CS10);
  d2:	e1 e8       	ldi	r30, 0x81	; 129
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	80 81       	ld	r24, Z
  d8:	10 82       	st	Z, r1
	TIMSK1&=(0<<OCIE1A);
  da:	ef e6       	ldi	r30, 0x6F	; 111
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	80 81       	ld	r24, Z
  e0:	10 82       	st	Z, r1
	cli();
  e2:	f8 94       	cli
  e4:	08 95       	ret

000000e6 <sine_wave>:
}

void sine_wave(void){
	it=0;
  e6:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <it+0x1>
  ea:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <it>
	mode=0x00;
  ee:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
	PORTC=0x00;
  f2:	18 b8       	out	0x08, r1	; 8
	start_timer();
  f4:	0e 94 57 00 	call	0xae	; 0xae <start_timer>
	while((0x03 & PINC)==0x00){};
  f8:	86 b1       	in	r24, 0x06	; 6
  fa:	83 70       	andi	r24, 0x03	; 3
  fc:	e9 f3       	breq	.-6      	; 0xf8 <sine_wave+0x12>
	stop_timer();
  fe:	0e 94 69 00 	call	0xd2	; 0xd2 <stop_timer>
 102:	08 95       	ret

00000104 <square_wave>:
};
void square_wave(void){
	it=0;
 104:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <it+0x1>
 108:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <it>
	mode=0x01;
 10c:	81 e0       	ldi	r24, 0x01	; 1
 10e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
	PORTC=0x01<<2;
 112:	84 e0       	ldi	r24, 0x04	; 4
 114:	88 b9       	out	0x08, r24	; 8
	start_timer();
 116:	0e 94 57 00 	call	0xae	; 0xae <start_timer>
	while((0x03 & PINC)==0x01){};
 11a:	86 b1       	in	r24, 0x06	; 6
 11c:	83 70       	andi	r24, 0x03	; 3
 11e:	81 30       	cpi	r24, 0x01	; 1
 120:	e1 f3       	breq	.-8      	; 0x11a <square_wave+0x16>
	stop_timer();
 122:	0e 94 69 00 	call	0xd2	; 0xd2 <stop_timer>
 126:	08 95       	ret

00000128 <triangle_wave>:
}
void triangle_wave(void){
	it=0;
 128:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <it+0x1>
 12c:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <it>
	mode=0x02;
 130:	82 e0       	ldi	r24, 0x02	; 2
 132:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
	PORTC=0x02<<2;
 136:	88 e0       	ldi	r24, 0x08	; 8
 138:	88 b9       	out	0x08, r24	; 8
	start_timer();
 13a:	0e 94 57 00 	call	0xae	; 0xae <start_timer>
	while((0x03 & PINC)==0x02){};
 13e:	86 b1       	in	r24, 0x06	; 6
 140:	83 70       	andi	r24, 0x03	; 3
 142:	82 30       	cpi	r24, 0x02	; 2
 144:	e1 f3       	breq	.-8      	; 0x13e <triangle_wave+0x16>
	stop_timer();
 146:	0e 94 69 00 	call	0xd2	; 0xd2 <stop_timer>
 14a:	08 95       	ret

0000014c <main>:
volatile unsigned int it=0;
volatile unsigned char mode=0x00, freq=0x00;

int main(void){
	
	DDRC=0x1C; //0b00011100
 14c:	8c e1       	ldi	r24, 0x1C	; 28
 14e:	87 b9       	out	0x07, r24	; 7
	DDRD=0xFC; //0b11111100
 150:	8c ef       	ldi	r24, 0xFC	; 252
 152:	8a b9       	out	0x0a, r24	; 10
	DDRB=0x03; //0b00000011
 154:	83 e0       	ldi	r24, 0x03	; 3
 156:	84 b9       	out	0x04, r24	; 4
			triangle_wave();
			break;
			
			default:
			stop_timer();
			PORTC=0x04<<2;
 158:	c0 e1       	ldi	r28, 0x10	; 16
	
	DDRC=0x1C; //0b00011100
	DDRD=0xFC; //0b11111100
	DDRB=0x03; //0b00000011
	while(1){
		switch(0x03 & PINC){ //0x00000011 & 0b76543210
 15a:	86 b1       	in	r24, 0x06	; 6
 15c:	83 70       	andi	r24, 0x03	; 3
 15e:	81 30       	cpi	r24, 0x01	; 1
 160:	39 f0       	breq	.+14     	; 0x170 <main+0x24>
 162:	18 f0       	brcs	.+6      	; 0x16a <main+0x1e>
 164:	82 30       	cpi	r24, 0x02	; 2
 166:	39 f0       	breq	.+14     	; 0x176 <main+0x2a>
 168:	09 c0       	rjmp	.+18     	; 0x17c <main+0x30>
			case 0x00:
			sine_wave();
 16a:	0e 94 73 00 	call	0xe6	; 0xe6 <sine_wave>
			break;
 16e:	f5 cf       	rjmp	.-22     	; 0x15a <main+0xe>
			
			case 0x01:
			square_wave();
 170:	0e 94 82 00 	call	0x104	; 0x104 <square_wave>
			break;
 174:	f2 cf       	rjmp	.-28     	; 0x15a <main+0xe>
			
			case 0x02:
			triangle_wave();
 176:	0e 94 94 00 	call	0x128	; 0x128 <triangle_wave>
			break;
 17a:	ef cf       	rjmp	.-34     	; 0x15a <main+0xe>
			
			default:
			stop_timer();
 17c:	0e 94 69 00 	call	0xd2	; 0xd2 <stop_timer>
			PORTC=0x04<<2;
 180:	c8 b9       	out	0x08, r28	; 8
			PORTB=0x00;
 182:	15 b8       	out	0x05, r1	; 5
			PORTD=0x00;
 184:	1b b8       	out	0x0b, r1	; 11
 186:	e9 cf       	rjmp	.-46     	; 0x15a <main+0xe>

00000188 <write_value>:
	if(it==80){it=0;}
	else{};
}

void write_value(const unsigned char value){
	PORTB=value>>6;
 188:	98 2f       	mov	r25, r24
 18a:	92 95       	swap	r25
 18c:	96 95       	lsr	r25
 18e:	96 95       	lsr	r25
 190:	93 70       	andi	r25, 0x03	; 3
 192:	95 b9       	out	0x05, r25	; 5
	PORTD=value<<2;
 194:	88 0f       	add	r24, r24
 196:	88 0f       	add	r24, r24
 198:	8b b9       	out	0x0b, r24	; 11
 19a:	08 95       	ret

0000019c <__vector_11>:
	start_timer();
	while((0x03 & PINC)==0x02){};
	stop_timer();
}

ISR(TIMER1_COMPA_vect){	
 19c:	1f 92       	push	r1
 19e:	0f 92       	push	r0
 1a0:	0f b6       	in	r0, 0x3f	; 63
 1a2:	0f 92       	push	r0
 1a4:	11 24       	eor	r1, r1
 1a6:	2f 93       	push	r18
 1a8:	3f 93       	push	r19
 1aa:	4f 93       	push	r20
 1ac:	5f 93       	push	r21
 1ae:	6f 93       	push	r22
 1b0:	7f 93       	push	r23
 1b2:	8f 93       	push	r24
 1b4:	9f 93       	push	r25
 1b6:	af 93       	push	r26
 1b8:	bf 93       	push	r27
 1ba:	ef 93       	push	r30
 1bc:	ff 93       	push	r31
	switch(mode){
 1be:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 1c2:	81 30       	cpi	r24, 0x01	; 1
 1c4:	b1 f1       	breq	.+108    	; 0x232 <__vector_11+0x96>
 1c6:	20 f0       	brcs	.+8      	; 0x1d0 <__vector_11+0x34>
 1c8:	82 30       	cpi	r24, 0x02	; 2
 1ca:	09 f4       	brne	.+2      	; 0x1ce <__vector_11+0x32>
 1cc:	49 c0       	rjmp	.+146    	; 0x260 <__vector_11+0xc4>
 1ce:	97 c0       	rjmp	.+302    	; 0x2fe <__vector_11+0x162>
		case 0x00:
			write_value(127.5*(1+sin(2*M_PI*60*it*2.083E-4)));
 1d0:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <it>
 1d4:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <it+0x1>
 1d8:	80 e0       	ldi	r24, 0x00	; 0
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	0e 94 37 02 	call	0x46e	; 0x46e <__floatunsisf>
 1e0:	2d ed       	ldi	r18, 0xDD	; 221
 1e2:	3e e7       	ldi	r19, 0x7E	; 126
 1e4:	4c eb       	ldi	r20, 0xBC	; 188
 1e6:	53 e4       	ldi	r21, 0x43	; 67
 1e8:	0e 94 c5 02 	call	0x58a	; 0x58a <__mulsf3>
 1ec:	2b e1       	ldi	r18, 0x1B	; 27
 1ee:	3b e6       	ldi	r19, 0x6B	; 107
 1f0:	4a e5       	ldi	r20, 0x5A	; 90
 1f2:	59 e3       	ldi	r21, 0x39	; 57
 1f4:	0e 94 c5 02 	call	0x58a	; 0x58a <__mulsf3>
 1f8:	0e 94 56 03 	call	0x6ac	; 0x6ac <sin>
 1fc:	20 e0       	ldi	r18, 0x00	; 0
 1fe:	30 e0       	ldi	r19, 0x00	; 0
 200:	40 e8       	ldi	r20, 0x80	; 128
 202:	5f e3       	ldi	r21, 0x3F	; 63
 204:	0e 94 9c 01 	call	0x338	; 0x338 <__addsf3>
 208:	20 e0       	ldi	r18, 0x00	; 0
 20a:	30 e0       	ldi	r19, 0x00	; 0
 20c:	4f ef       	ldi	r20, 0xFF	; 255
 20e:	52 e4       	ldi	r21, 0x42	; 66
 210:	0e 94 c5 02 	call	0x58a	; 0x58a <__mulsf3>
 214:	0e 94 08 02 	call	0x410	; 0x410 <__fixunssfsi>
 218:	86 2f       	mov	r24, r22
 21a:	0e 94 c4 00 	call	0x188	; 0x188 <write_value>
			it++;
 21e:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <it>
 222:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <it+0x1>
 226:	01 96       	adiw	r24, 0x01	; 1
 228:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <it+0x1>
 22c:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <it>
		break;
 230:	66 c0       	rjmp	.+204    	; 0x2fe <__vector_11+0x162>
		
		case 0x01:
			if(it<=40){write_value(0xFF);}
 232:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <it>
 236:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <it+0x1>
 23a:	89 97       	sbiw	r24, 0x29	; 41
 23c:	20 f4       	brcc	.+8      	; 0x246 <__vector_11+0xaa>
 23e:	8f ef       	ldi	r24, 0xFF	; 255
 240:	0e 94 c4 00 	call	0x188	; 0x188 <write_value>
 244:	03 c0       	rjmp	.+6      	; 0x24c <__vector_11+0xb0>
			else{write_value(0x00);};
 246:	80 e0       	ldi	r24, 0x00	; 0
 248:	0e 94 c4 00 	call	0x188	; 0x188 <write_value>
			it++;
 24c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <it>
 250:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <it+0x1>
 254:	01 96       	adiw	r24, 0x01	; 1
 256:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <it+0x1>
 25a:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <it>
		break;
 25e:	4f c0       	rjmp	.+158    	; 0x2fe <__vector_11+0x162>
		
		case 0x02:
			if(it<=40){write_value(round((it*255)/40));}
 260:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <it>
 264:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <it+0x1>
 268:	89 97       	sbiw	r24, 0x29	; 41
 26a:	18 f5       	brcc	.+70     	; 0x2b2 <__vector_11+0x116>
 26c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <it>
 270:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <it+0x1>
 274:	4f ef       	ldi	r20, 0xFF	; 255
 276:	48 9f       	mul	r20, r24
 278:	90 01       	movw	r18, r0
 27a:	49 9f       	mul	r20, r25
 27c:	30 0d       	add	r19, r0
 27e:	11 24       	eor	r1, r1
 280:	ad ec       	ldi	r26, 0xCD	; 205
 282:	bc ec       	ldi	r27, 0xCC	; 204
 284:	0e 94 01 04 	call	0x802	; 0x802 <__umulhisi3>
 288:	96 95       	lsr	r25
 28a:	87 95       	ror	r24
 28c:	92 95       	swap	r25
 28e:	82 95       	swap	r24
 290:	8f 70       	andi	r24, 0x0F	; 15
 292:	89 27       	eor	r24, r25
 294:	9f 70       	andi	r25, 0x0F	; 15
 296:	89 27       	eor	r24, r25
 298:	bc 01       	movw	r22, r24
 29a:	80 e0       	ldi	r24, 0x00	; 0
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	0e 94 37 02 	call	0x46e	; 0x46e <__floatunsisf>
 2a2:	0e 94 32 03 	call	0x664	; 0x664 <round>
 2a6:	0e 94 08 02 	call	0x410	; 0x410 <__fixunssfsi>
 2aa:	86 2f       	mov	r24, r22
 2ac:	0e 94 c4 00 	call	0x188	; 0x188 <write_value>
 2b0:	1d c0       	rjmp	.+58     	; 0x2ec <__vector_11+0x150>
			else{write_value(round(510-(it*6.375)));}
 2b2:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <it>
 2b6:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <it+0x1>
 2ba:	80 e0       	ldi	r24, 0x00	; 0
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	0e 94 37 02 	call	0x46e	; 0x46e <__floatunsisf>
 2c2:	20 e0       	ldi	r18, 0x00	; 0
 2c4:	30 e0       	ldi	r19, 0x00	; 0
 2c6:	4c ec       	ldi	r20, 0xCC	; 204
 2c8:	50 e4       	ldi	r21, 0x40	; 64
 2ca:	0e 94 c5 02 	call	0x58a	; 0x58a <__mulsf3>
 2ce:	9b 01       	movw	r18, r22
 2d0:	ac 01       	movw	r20, r24
 2d2:	60 e0       	ldi	r22, 0x00	; 0
 2d4:	70 e0       	ldi	r23, 0x00	; 0
 2d6:	8f ef       	ldi	r24, 0xFF	; 255
 2d8:	93 e4       	ldi	r25, 0x43	; 67
 2da:	0e 94 9b 01 	call	0x336	; 0x336 <__subsf3>
 2de:	0e 94 32 03 	call	0x664	; 0x664 <round>
 2e2:	0e 94 08 02 	call	0x410	; 0x410 <__fixunssfsi>
 2e6:	86 2f       	mov	r24, r22
 2e8:	0e 94 c4 00 	call	0x188	; 0x188 <write_value>
			it++;
 2ec:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <it>
 2f0:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <it+0x1>
 2f4:	01 96       	adiw	r24, 0x01	; 1
 2f6:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <it+0x1>
 2fa:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <it>
		break;
		
		default:
		break;
	};
	if(it==80){it=0;}
 2fe:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <it>
 302:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <it+0x1>
 306:	80 35       	cpi	r24, 0x50	; 80
 308:	91 05       	cpc	r25, r1
 30a:	21 f4       	brne	.+8      	; 0x314 <__vector_11+0x178>
 30c:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <it+0x1>
 310:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <it>
	else{};
}
 314:	ff 91       	pop	r31
 316:	ef 91       	pop	r30
 318:	bf 91       	pop	r27
 31a:	af 91       	pop	r26
 31c:	9f 91       	pop	r25
 31e:	8f 91       	pop	r24
 320:	7f 91       	pop	r23
 322:	6f 91       	pop	r22
 324:	5f 91       	pop	r21
 326:	4f 91       	pop	r20
 328:	3f 91       	pop	r19
 32a:	2f 91       	pop	r18
 32c:	0f 90       	pop	r0
 32e:	0f be       	out	0x3f, r0	; 63
 330:	0f 90       	pop	r0
 332:	1f 90       	pop	r1
 334:	18 95       	reti

00000336 <__subsf3>:
 336:	50 58       	subi	r21, 0x80	; 128

00000338 <__addsf3>:
 338:	bb 27       	eor	r27, r27
 33a:	aa 27       	eor	r26, r26
 33c:	0e 94 b3 01 	call	0x366	; 0x366 <__addsf3x>
 340:	0c 94 8b 02 	jmp	0x516	; 0x516 <__fp_round>
 344:	0e 94 7d 02 	call	0x4fa	; 0x4fa <__fp_pscA>
 348:	38 f0       	brcs	.+14     	; 0x358 <__addsf3+0x20>
 34a:	0e 94 84 02 	call	0x508	; 0x508 <__fp_pscB>
 34e:	20 f0       	brcs	.+8      	; 0x358 <__addsf3+0x20>
 350:	39 f4       	brne	.+14     	; 0x360 <__addsf3+0x28>
 352:	9f 3f       	cpi	r25, 0xFF	; 255
 354:	19 f4       	brne	.+6      	; 0x35c <__addsf3+0x24>
 356:	26 f4       	brtc	.+8      	; 0x360 <__addsf3+0x28>
 358:	0c 94 7a 02 	jmp	0x4f4	; 0x4f4 <__fp_nan>
 35c:	0e f4       	brtc	.+2      	; 0x360 <__addsf3+0x28>
 35e:	e0 95       	com	r30
 360:	e7 fb       	bst	r30, 7
 362:	0c 94 74 02 	jmp	0x4e8	; 0x4e8 <__fp_inf>

00000366 <__addsf3x>:
 366:	e9 2f       	mov	r30, r25
 368:	0e 94 9c 02 	call	0x538	; 0x538 <__fp_split3>
 36c:	58 f3       	brcs	.-42     	; 0x344 <__addsf3+0xc>
 36e:	ba 17       	cp	r27, r26
 370:	62 07       	cpc	r22, r18
 372:	73 07       	cpc	r23, r19
 374:	84 07       	cpc	r24, r20
 376:	95 07       	cpc	r25, r21
 378:	20 f0       	brcs	.+8      	; 0x382 <__addsf3x+0x1c>
 37a:	79 f4       	brne	.+30     	; 0x39a <__addsf3x+0x34>
 37c:	a6 f5       	brtc	.+104    	; 0x3e6 <__addsf3x+0x80>
 37e:	0c 94 be 02 	jmp	0x57c	; 0x57c <__fp_zero>
 382:	0e f4       	brtc	.+2      	; 0x386 <__addsf3x+0x20>
 384:	e0 95       	com	r30
 386:	0b 2e       	mov	r0, r27
 388:	ba 2f       	mov	r27, r26
 38a:	a0 2d       	mov	r26, r0
 38c:	0b 01       	movw	r0, r22
 38e:	b9 01       	movw	r22, r18
 390:	90 01       	movw	r18, r0
 392:	0c 01       	movw	r0, r24
 394:	ca 01       	movw	r24, r20
 396:	a0 01       	movw	r20, r0
 398:	11 24       	eor	r1, r1
 39a:	ff 27       	eor	r31, r31
 39c:	59 1b       	sub	r21, r25
 39e:	99 f0       	breq	.+38     	; 0x3c6 <__addsf3x+0x60>
 3a0:	59 3f       	cpi	r21, 0xF9	; 249
 3a2:	50 f4       	brcc	.+20     	; 0x3b8 <__addsf3x+0x52>
 3a4:	50 3e       	cpi	r21, 0xE0	; 224
 3a6:	68 f1       	brcs	.+90     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3a8:	1a 16       	cp	r1, r26
 3aa:	f0 40       	sbci	r31, 0x00	; 0
 3ac:	a2 2f       	mov	r26, r18
 3ae:	23 2f       	mov	r18, r19
 3b0:	34 2f       	mov	r19, r20
 3b2:	44 27       	eor	r20, r20
 3b4:	58 5f       	subi	r21, 0xF8	; 248
 3b6:	f3 cf       	rjmp	.-26     	; 0x39e <__addsf3x+0x38>
 3b8:	46 95       	lsr	r20
 3ba:	37 95       	ror	r19
 3bc:	27 95       	ror	r18
 3be:	a7 95       	ror	r26
 3c0:	f0 40       	sbci	r31, 0x00	; 0
 3c2:	53 95       	inc	r21
 3c4:	c9 f7       	brne	.-14     	; 0x3b8 <__addsf3x+0x52>
 3c6:	7e f4       	brtc	.+30     	; 0x3e6 <__addsf3x+0x80>
 3c8:	1f 16       	cp	r1, r31
 3ca:	ba 0b       	sbc	r27, r26
 3cc:	62 0b       	sbc	r22, r18
 3ce:	73 0b       	sbc	r23, r19
 3d0:	84 0b       	sbc	r24, r20
 3d2:	ba f0       	brmi	.+46     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3d4:	91 50       	subi	r25, 0x01	; 1
 3d6:	a1 f0       	breq	.+40     	; 0x400 <__LOCK_REGION_LENGTH__>
 3d8:	ff 0f       	add	r31, r31
 3da:	bb 1f       	adc	r27, r27
 3dc:	66 1f       	adc	r22, r22
 3de:	77 1f       	adc	r23, r23
 3e0:	88 1f       	adc	r24, r24
 3e2:	c2 f7       	brpl	.-16     	; 0x3d4 <__addsf3x+0x6e>
 3e4:	0e c0       	rjmp	.+28     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3e6:	ba 0f       	add	r27, r26
 3e8:	62 1f       	adc	r22, r18
 3ea:	73 1f       	adc	r23, r19
 3ec:	84 1f       	adc	r24, r20
 3ee:	48 f4       	brcc	.+18     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3f0:	87 95       	ror	r24
 3f2:	77 95       	ror	r23
 3f4:	67 95       	ror	r22
 3f6:	b7 95       	ror	r27
 3f8:	f7 95       	ror	r31
 3fa:	9e 3f       	cpi	r25, 0xFE	; 254
 3fc:	08 f0       	brcs	.+2      	; 0x400 <__LOCK_REGION_LENGTH__>
 3fe:	b0 cf       	rjmp	.-160    	; 0x360 <__addsf3+0x28>
 400:	93 95       	inc	r25
 402:	88 0f       	add	r24, r24
 404:	08 f0       	brcs	.+2      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 406:	99 27       	eor	r25, r25
 408:	ee 0f       	add	r30, r30
 40a:	97 95       	ror	r25
 40c:	87 95       	ror	r24
 40e:	08 95       	ret

00000410 <__fixunssfsi>:
 410:	0e 94 a4 02 	call	0x548	; 0x548 <__fp_splitA>
 414:	88 f0       	brcs	.+34     	; 0x438 <__fixunssfsi+0x28>
 416:	9f 57       	subi	r25, 0x7F	; 127
 418:	98 f0       	brcs	.+38     	; 0x440 <__fixunssfsi+0x30>
 41a:	b9 2f       	mov	r27, r25
 41c:	99 27       	eor	r25, r25
 41e:	b7 51       	subi	r27, 0x17	; 23
 420:	b0 f0       	brcs	.+44     	; 0x44e <__fixunssfsi+0x3e>
 422:	e1 f0       	breq	.+56     	; 0x45c <__fixunssfsi+0x4c>
 424:	66 0f       	add	r22, r22
 426:	77 1f       	adc	r23, r23
 428:	88 1f       	adc	r24, r24
 42a:	99 1f       	adc	r25, r25
 42c:	1a f0       	brmi	.+6      	; 0x434 <__fixunssfsi+0x24>
 42e:	ba 95       	dec	r27
 430:	c9 f7       	brne	.-14     	; 0x424 <__fixunssfsi+0x14>
 432:	14 c0       	rjmp	.+40     	; 0x45c <__fixunssfsi+0x4c>
 434:	b1 30       	cpi	r27, 0x01	; 1
 436:	91 f0       	breq	.+36     	; 0x45c <__fixunssfsi+0x4c>
 438:	0e 94 be 02 	call	0x57c	; 0x57c <__fp_zero>
 43c:	b1 e0       	ldi	r27, 0x01	; 1
 43e:	08 95       	ret
 440:	0c 94 be 02 	jmp	0x57c	; 0x57c <__fp_zero>
 444:	67 2f       	mov	r22, r23
 446:	78 2f       	mov	r23, r24
 448:	88 27       	eor	r24, r24
 44a:	b8 5f       	subi	r27, 0xF8	; 248
 44c:	39 f0       	breq	.+14     	; 0x45c <__fixunssfsi+0x4c>
 44e:	b9 3f       	cpi	r27, 0xF9	; 249
 450:	cc f3       	brlt	.-14     	; 0x444 <__fixunssfsi+0x34>
 452:	86 95       	lsr	r24
 454:	77 95       	ror	r23
 456:	67 95       	ror	r22
 458:	b3 95       	inc	r27
 45a:	d9 f7       	brne	.-10     	; 0x452 <__fixunssfsi+0x42>
 45c:	3e f4       	brtc	.+14     	; 0x46c <__fixunssfsi+0x5c>
 45e:	90 95       	com	r25
 460:	80 95       	com	r24
 462:	70 95       	com	r23
 464:	61 95       	neg	r22
 466:	7f 4f       	sbci	r23, 0xFF	; 255
 468:	8f 4f       	sbci	r24, 0xFF	; 255
 46a:	9f 4f       	sbci	r25, 0xFF	; 255
 46c:	08 95       	ret

0000046e <__floatunsisf>:
 46e:	e8 94       	clt
 470:	09 c0       	rjmp	.+18     	; 0x484 <__floatsisf+0x12>

00000472 <__floatsisf>:
 472:	97 fb       	bst	r25, 7
 474:	3e f4       	brtc	.+14     	; 0x484 <__floatsisf+0x12>
 476:	90 95       	com	r25
 478:	80 95       	com	r24
 47a:	70 95       	com	r23
 47c:	61 95       	neg	r22
 47e:	7f 4f       	sbci	r23, 0xFF	; 255
 480:	8f 4f       	sbci	r24, 0xFF	; 255
 482:	9f 4f       	sbci	r25, 0xFF	; 255
 484:	99 23       	and	r25, r25
 486:	a9 f0       	breq	.+42     	; 0x4b2 <__floatsisf+0x40>
 488:	f9 2f       	mov	r31, r25
 48a:	96 e9       	ldi	r25, 0x96	; 150
 48c:	bb 27       	eor	r27, r27
 48e:	93 95       	inc	r25
 490:	f6 95       	lsr	r31
 492:	87 95       	ror	r24
 494:	77 95       	ror	r23
 496:	67 95       	ror	r22
 498:	b7 95       	ror	r27
 49a:	f1 11       	cpse	r31, r1
 49c:	f8 cf       	rjmp	.-16     	; 0x48e <__floatsisf+0x1c>
 49e:	fa f4       	brpl	.+62     	; 0x4de <__floatsisf+0x6c>
 4a0:	bb 0f       	add	r27, r27
 4a2:	11 f4       	brne	.+4      	; 0x4a8 <__floatsisf+0x36>
 4a4:	60 ff       	sbrs	r22, 0
 4a6:	1b c0       	rjmp	.+54     	; 0x4de <__floatsisf+0x6c>
 4a8:	6f 5f       	subi	r22, 0xFF	; 255
 4aa:	7f 4f       	sbci	r23, 0xFF	; 255
 4ac:	8f 4f       	sbci	r24, 0xFF	; 255
 4ae:	9f 4f       	sbci	r25, 0xFF	; 255
 4b0:	16 c0       	rjmp	.+44     	; 0x4de <__floatsisf+0x6c>
 4b2:	88 23       	and	r24, r24
 4b4:	11 f0       	breq	.+4      	; 0x4ba <__floatsisf+0x48>
 4b6:	96 e9       	ldi	r25, 0x96	; 150
 4b8:	11 c0       	rjmp	.+34     	; 0x4dc <__floatsisf+0x6a>
 4ba:	77 23       	and	r23, r23
 4bc:	21 f0       	breq	.+8      	; 0x4c6 <__floatsisf+0x54>
 4be:	9e e8       	ldi	r25, 0x8E	; 142
 4c0:	87 2f       	mov	r24, r23
 4c2:	76 2f       	mov	r23, r22
 4c4:	05 c0       	rjmp	.+10     	; 0x4d0 <__floatsisf+0x5e>
 4c6:	66 23       	and	r22, r22
 4c8:	71 f0       	breq	.+28     	; 0x4e6 <__floatsisf+0x74>
 4ca:	96 e8       	ldi	r25, 0x86	; 134
 4cc:	86 2f       	mov	r24, r22
 4ce:	70 e0       	ldi	r23, 0x00	; 0
 4d0:	60 e0       	ldi	r22, 0x00	; 0
 4d2:	2a f0       	brmi	.+10     	; 0x4de <__floatsisf+0x6c>
 4d4:	9a 95       	dec	r25
 4d6:	66 0f       	add	r22, r22
 4d8:	77 1f       	adc	r23, r23
 4da:	88 1f       	adc	r24, r24
 4dc:	da f7       	brpl	.-10     	; 0x4d4 <__floatsisf+0x62>
 4de:	88 0f       	add	r24, r24
 4e0:	96 95       	lsr	r25
 4e2:	87 95       	ror	r24
 4e4:	97 f9       	bld	r25, 7
 4e6:	08 95       	ret

000004e8 <__fp_inf>:
 4e8:	97 f9       	bld	r25, 7
 4ea:	9f 67       	ori	r25, 0x7F	; 127
 4ec:	80 e8       	ldi	r24, 0x80	; 128
 4ee:	70 e0       	ldi	r23, 0x00	; 0
 4f0:	60 e0       	ldi	r22, 0x00	; 0
 4f2:	08 95       	ret

000004f4 <__fp_nan>:
 4f4:	9f ef       	ldi	r25, 0xFF	; 255
 4f6:	80 ec       	ldi	r24, 0xC0	; 192
 4f8:	08 95       	ret

000004fa <__fp_pscA>:
 4fa:	00 24       	eor	r0, r0
 4fc:	0a 94       	dec	r0
 4fe:	16 16       	cp	r1, r22
 500:	17 06       	cpc	r1, r23
 502:	18 06       	cpc	r1, r24
 504:	09 06       	cpc	r0, r25
 506:	08 95       	ret

00000508 <__fp_pscB>:
 508:	00 24       	eor	r0, r0
 50a:	0a 94       	dec	r0
 50c:	12 16       	cp	r1, r18
 50e:	13 06       	cpc	r1, r19
 510:	14 06       	cpc	r1, r20
 512:	05 06       	cpc	r0, r21
 514:	08 95       	ret

00000516 <__fp_round>:
 516:	09 2e       	mov	r0, r25
 518:	03 94       	inc	r0
 51a:	00 0c       	add	r0, r0
 51c:	11 f4       	brne	.+4      	; 0x522 <__fp_round+0xc>
 51e:	88 23       	and	r24, r24
 520:	52 f0       	brmi	.+20     	; 0x536 <__fp_round+0x20>
 522:	bb 0f       	add	r27, r27
 524:	40 f4       	brcc	.+16     	; 0x536 <__fp_round+0x20>
 526:	bf 2b       	or	r27, r31
 528:	11 f4       	brne	.+4      	; 0x52e <__fp_round+0x18>
 52a:	60 ff       	sbrs	r22, 0
 52c:	04 c0       	rjmp	.+8      	; 0x536 <__fp_round+0x20>
 52e:	6f 5f       	subi	r22, 0xFF	; 255
 530:	7f 4f       	sbci	r23, 0xFF	; 255
 532:	8f 4f       	sbci	r24, 0xFF	; 255
 534:	9f 4f       	sbci	r25, 0xFF	; 255
 536:	08 95       	ret

00000538 <__fp_split3>:
 538:	57 fd       	sbrc	r21, 7
 53a:	90 58       	subi	r25, 0x80	; 128
 53c:	44 0f       	add	r20, r20
 53e:	55 1f       	adc	r21, r21
 540:	59 f0       	breq	.+22     	; 0x558 <__fp_splitA+0x10>
 542:	5f 3f       	cpi	r21, 0xFF	; 255
 544:	71 f0       	breq	.+28     	; 0x562 <__fp_splitA+0x1a>
 546:	47 95       	ror	r20

00000548 <__fp_splitA>:
 548:	88 0f       	add	r24, r24
 54a:	97 fb       	bst	r25, 7
 54c:	99 1f       	adc	r25, r25
 54e:	61 f0       	breq	.+24     	; 0x568 <__fp_splitA+0x20>
 550:	9f 3f       	cpi	r25, 0xFF	; 255
 552:	79 f0       	breq	.+30     	; 0x572 <__fp_splitA+0x2a>
 554:	87 95       	ror	r24
 556:	08 95       	ret
 558:	12 16       	cp	r1, r18
 55a:	13 06       	cpc	r1, r19
 55c:	14 06       	cpc	r1, r20
 55e:	55 1f       	adc	r21, r21
 560:	f2 cf       	rjmp	.-28     	; 0x546 <__fp_split3+0xe>
 562:	46 95       	lsr	r20
 564:	f1 df       	rcall	.-30     	; 0x548 <__fp_splitA>
 566:	08 c0       	rjmp	.+16     	; 0x578 <__fp_splitA+0x30>
 568:	16 16       	cp	r1, r22
 56a:	17 06       	cpc	r1, r23
 56c:	18 06       	cpc	r1, r24
 56e:	99 1f       	adc	r25, r25
 570:	f1 cf       	rjmp	.-30     	; 0x554 <__fp_splitA+0xc>
 572:	86 95       	lsr	r24
 574:	71 05       	cpc	r23, r1
 576:	61 05       	cpc	r22, r1
 578:	08 94       	sec
 57a:	08 95       	ret

0000057c <__fp_zero>:
 57c:	e8 94       	clt

0000057e <__fp_szero>:
 57e:	bb 27       	eor	r27, r27
 580:	66 27       	eor	r22, r22
 582:	77 27       	eor	r23, r23
 584:	cb 01       	movw	r24, r22
 586:	97 f9       	bld	r25, 7
 588:	08 95       	ret

0000058a <__mulsf3>:
 58a:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <__mulsf3x>
 58e:	0c 94 8b 02 	jmp	0x516	; 0x516 <__fp_round>
 592:	0e 94 7d 02 	call	0x4fa	; 0x4fa <__fp_pscA>
 596:	38 f0       	brcs	.+14     	; 0x5a6 <__mulsf3+0x1c>
 598:	0e 94 84 02 	call	0x508	; 0x508 <__fp_pscB>
 59c:	20 f0       	brcs	.+8      	; 0x5a6 <__mulsf3+0x1c>
 59e:	95 23       	and	r25, r21
 5a0:	11 f0       	breq	.+4      	; 0x5a6 <__mulsf3+0x1c>
 5a2:	0c 94 74 02 	jmp	0x4e8	; 0x4e8 <__fp_inf>
 5a6:	0c 94 7a 02 	jmp	0x4f4	; 0x4f4 <__fp_nan>
 5aa:	11 24       	eor	r1, r1
 5ac:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__fp_szero>

000005b0 <__mulsf3x>:
 5b0:	0e 94 9c 02 	call	0x538	; 0x538 <__fp_split3>
 5b4:	70 f3       	brcs	.-36     	; 0x592 <__mulsf3+0x8>

000005b6 <__mulsf3_pse>:
 5b6:	95 9f       	mul	r25, r21
 5b8:	c1 f3       	breq	.-16     	; 0x5aa <__mulsf3+0x20>
 5ba:	95 0f       	add	r25, r21
 5bc:	50 e0       	ldi	r21, 0x00	; 0
 5be:	55 1f       	adc	r21, r21
 5c0:	62 9f       	mul	r22, r18
 5c2:	f0 01       	movw	r30, r0
 5c4:	72 9f       	mul	r23, r18
 5c6:	bb 27       	eor	r27, r27
 5c8:	f0 0d       	add	r31, r0
 5ca:	b1 1d       	adc	r27, r1
 5cc:	63 9f       	mul	r22, r19
 5ce:	aa 27       	eor	r26, r26
 5d0:	f0 0d       	add	r31, r0
 5d2:	b1 1d       	adc	r27, r1
 5d4:	aa 1f       	adc	r26, r26
 5d6:	64 9f       	mul	r22, r20
 5d8:	66 27       	eor	r22, r22
 5da:	b0 0d       	add	r27, r0
 5dc:	a1 1d       	adc	r26, r1
 5de:	66 1f       	adc	r22, r22
 5e0:	82 9f       	mul	r24, r18
 5e2:	22 27       	eor	r18, r18
 5e4:	b0 0d       	add	r27, r0
 5e6:	a1 1d       	adc	r26, r1
 5e8:	62 1f       	adc	r22, r18
 5ea:	73 9f       	mul	r23, r19
 5ec:	b0 0d       	add	r27, r0
 5ee:	a1 1d       	adc	r26, r1
 5f0:	62 1f       	adc	r22, r18
 5f2:	83 9f       	mul	r24, r19
 5f4:	a0 0d       	add	r26, r0
 5f6:	61 1d       	adc	r22, r1
 5f8:	22 1f       	adc	r18, r18
 5fa:	74 9f       	mul	r23, r20
 5fc:	33 27       	eor	r19, r19
 5fe:	a0 0d       	add	r26, r0
 600:	61 1d       	adc	r22, r1
 602:	23 1f       	adc	r18, r19
 604:	84 9f       	mul	r24, r20
 606:	60 0d       	add	r22, r0
 608:	21 1d       	adc	r18, r1
 60a:	82 2f       	mov	r24, r18
 60c:	76 2f       	mov	r23, r22
 60e:	6a 2f       	mov	r22, r26
 610:	11 24       	eor	r1, r1
 612:	9f 57       	subi	r25, 0x7F	; 127
 614:	50 40       	sbci	r21, 0x00	; 0
 616:	9a f0       	brmi	.+38     	; 0x63e <__mulsf3_pse+0x88>
 618:	f1 f0       	breq	.+60     	; 0x656 <__mulsf3_pse+0xa0>
 61a:	88 23       	and	r24, r24
 61c:	4a f0       	brmi	.+18     	; 0x630 <__mulsf3_pse+0x7a>
 61e:	ee 0f       	add	r30, r30
 620:	ff 1f       	adc	r31, r31
 622:	bb 1f       	adc	r27, r27
 624:	66 1f       	adc	r22, r22
 626:	77 1f       	adc	r23, r23
 628:	88 1f       	adc	r24, r24
 62a:	91 50       	subi	r25, 0x01	; 1
 62c:	50 40       	sbci	r21, 0x00	; 0
 62e:	a9 f7       	brne	.-22     	; 0x61a <__mulsf3_pse+0x64>
 630:	9e 3f       	cpi	r25, 0xFE	; 254
 632:	51 05       	cpc	r21, r1
 634:	80 f0       	brcs	.+32     	; 0x656 <__mulsf3_pse+0xa0>
 636:	0c 94 74 02 	jmp	0x4e8	; 0x4e8 <__fp_inf>
 63a:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__fp_szero>
 63e:	5f 3f       	cpi	r21, 0xFF	; 255
 640:	e4 f3       	brlt	.-8      	; 0x63a <__mulsf3_pse+0x84>
 642:	98 3e       	cpi	r25, 0xE8	; 232
 644:	d4 f3       	brlt	.-12     	; 0x63a <__mulsf3_pse+0x84>
 646:	86 95       	lsr	r24
 648:	77 95       	ror	r23
 64a:	67 95       	ror	r22
 64c:	b7 95       	ror	r27
 64e:	f7 95       	ror	r31
 650:	e7 95       	ror	r30
 652:	9f 5f       	subi	r25, 0xFF	; 255
 654:	c1 f7       	brne	.-16     	; 0x646 <__mulsf3_pse+0x90>
 656:	fe 2b       	or	r31, r30
 658:	88 0f       	add	r24, r24
 65a:	91 1d       	adc	r25, r1
 65c:	96 95       	lsr	r25
 65e:	87 95       	ror	r24
 660:	97 f9       	bld	r25, 7
 662:	08 95       	ret

00000664 <round>:
 664:	0e 94 a4 02 	call	0x548	; 0x548 <__fp_splitA>
 668:	e8 f0       	brcs	.+58     	; 0x6a4 <round+0x40>
 66a:	9e 37       	cpi	r25, 0x7E	; 126
 66c:	e8 f0       	brcs	.+58     	; 0x6a8 <round+0x44>
 66e:	96 39       	cpi	r25, 0x96	; 150
 670:	b8 f4       	brcc	.+46     	; 0x6a0 <round+0x3c>
 672:	9e 38       	cpi	r25, 0x8E	; 142
 674:	48 f4       	brcc	.+18     	; 0x688 <round+0x24>
 676:	67 2f       	mov	r22, r23
 678:	78 2f       	mov	r23, r24
 67a:	88 27       	eor	r24, r24
 67c:	98 5f       	subi	r25, 0xF8	; 248
 67e:	f9 cf       	rjmp	.-14     	; 0x672 <round+0xe>
 680:	86 95       	lsr	r24
 682:	77 95       	ror	r23
 684:	67 95       	ror	r22
 686:	93 95       	inc	r25
 688:	95 39       	cpi	r25, 0x95	; 149
 68a:	d0 f3       	brcs	.-12     	; 0x680 <round+0x1c>
 68c:	b6 2f       	mov	r27, r22
 68e:	b1 70       	andi	r27, 0x01	; 1
 690:	6b 0f       	add	r22, r27
 692:	71 1d       	adc	r23, r1
 694:	81 1d       	adc	r24, r1
 696:	20 f4       	brcc	.+8      	; 0x6a0 <round+0x3c>
 698:	87 95       	ror	r24
 69a:	77 95       	ror	r23
 69c:	67 95       	ror	r22
 69e:	93 95       	inc	r25
 6a0:	0c 94 5e 03 	jmp	0x6bc	; 0x6bc <__fp_mintl>
 6a4:	0c 94 79 03 	jmp	0x6f2	; 0x6f2 <__fp_mpack>
 6a8:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__fp_szero>

000006ac <sin>:
 6ac:	9f 93       	push	r25
 6ae:	0e 94 89 03 	call	0x712	; 0x712 <__fp_rempio2>
 6b2:	0f 90       	pop	r0
 6b4:	07 fc       	sbrc	r0, 7
 6b6:	ee 5f       	subi	r30, 0xFE	; 254
 6b8:	0c 94 b2 03 	jmp	0x764	; 0x764 <__fp_sinus>

000006bc <__fp_mintl>:
 6bc:	88 23       	and	r24, r24
 6be:	71 f4       	brne	.+28     	; 0x6dc <__fp_mintl+0x20>
 6c0:	77 23       	and	r23, r23
 6c2:	21 f0       	breq	.+8      	; 0x6cc <__fp_mintl+0x10>
 6c4:	98 50       	subi	r25, 0x08	; 8
 6c6:	87 2b       	or	r24, r23
 6c8:	76 2f       	mov	r23, r22
 6ca:	07 c0       	rjmp	.+14     	; 0x6da <__fp_mintl+0x1e>
 6cc:	66 23       	and	r22, r22
 6ce:	11 f4       	brne	.+4      	; 0x6d4 <__fp_mintl+0x18>
 6d0:	99 27       	eor	r25, r25
 6d2:	0d c0       	rjmp	.+26     	; 0x6ee <__fp_mintl+0x32>
 6d4:	90 51       	subi	r25, 0x10	; 16
 6d6:	86 2b       	or	r24, r22
 6d8:	70 e0       	ldi	r23, 0x00	; 0
 6da:	60 e0       	ldi	r22, 0x00	; 0
 6dc:	2a f0       	brmi	.+10     	; 0x6e8 <__fp_mintl+0x2c>
 6de:	9a 95       	dec	r25
 6e0:	66 0f       	add	r22, r22
 6e2:	77 1f       	adc	r23, r23
 6e4:	88 1f       	adc	r24, r24
 6e6:	da f7       	brpl	.-10     	; 0x6de <__fp_mintl+0x22>
 6e8:	88 0f       	add	r24, r24
 6ea:	96 95       	lsr	r25
 6ec:	87 95       	ror	r24
 6ee:	97 f9       	bld	r25, 7
 6f0:	08 95       	ret

000006f2 <__fp_mpack>:
 6f2:	9f 3f       	cpi	r25, 0xFF	; 255
 6f4:	31 f0       	breq	.+12     	; 0x702 <__fp_mpack_finite+0xc>

000006f6 <__fp_mpack_finite>:
 6f6:	91 50       	subi	r25, 0x01	; 1
 6f8:	20 f4       	brcc	.+8      	; 0x702 <__fp_mpack_finite+0xc>
 6fa:	87 95       	ror	r24
 6fc:	77 95       	ror	r23
 6fe:	67 95       	ror	r22
 700:	b7 95       	ror	r27
 702:	88 0f       	add	r24, r24
 704:	91 1d       	adc	r25, r1
 706:	96 95       	lsr	r25
 708:	87 95       	ror	r24
 70a:	97 f9       	bld	r25, 7
 70c:	08 95       	ret
 70e:	0c 94 7a 02 	jmp	0x4f4	; 0x4f4 <__fp_nan>

00000712 <__fp_rempio2>:
 712:	0e 94 a4 02 	call	0x548	; 0x548 <__fp_splitA>
 716:	d8 f3       	brcs	.-10     	; 0x70e <__fp_mpack_finite+0x18>
 718:	e8 94       	clt
 71a:	e0 e0       	ldi	r30, 0x00	; 0
 71c:	bb 27       	eor	r27, r27
 71e:	9f 57       	subi	r25, 0x7F	; 127
 720:	f0 f0       	brcs	.+60     	; 0x75e <__fp_rempio2+0x4c>
 722:	2a ed       	ldi	r18, 0xDA	; 218
 724:	3f e0       	ldi	r19, 0x0F	; 15
 726:	49 ec       	ldi	r20, 0xC9	; 201
 728:	06 c0       	rjmp	.+12     	; 0x736 <__fp_rempio2+0x24>
 72a:	ee 0f       	add	r30, r30
 72c:	bb 0f       	add	r27, r27
 72e:	66 1f       	adc	r22, r22
 730:	77 1f       	adc	r23, r23
 732:	88 1f       	adc	r24, r24
 734:	28 f0       	brcs	.+10     	; 0x740 <__fp_rempio2+0x2e>
 736:	b2 3a       	cpi	r27, 0xA2	; 162
 738:	62 07       	cpc	r22, r18
 73a:	73 07       	cpc	r23, r19
 73c:	84 07       	cpc	r24, r20
 73e:	28 f0       	brcs	.+10     	; 0x74a <__fp_rempio2+0x38>
 740:	b2 5a       	subi	r27, 0xA2	; 162
 742:	62 0b       	sbc	r22, r18
 744:	73 0b       	sbc	r23, r19
 746:	84 0b       	sbc	r24, r20
 748:	e3 95       	inc	r30
 74a:	9a 95       	dec	r25
 74c:	72 f7       	brpl	.-36     	; 0x72a <__fp_rempio2+0x18>
 74e:	80 38       	cpi	r24, 0x80	; 128
 750:	30 f4       	brcc	.+12     	; 0x75e <__fp_rempio2+0x4c>
 752:	9a 95       	dec	r25
 754:	bb 0f       	add	r27, r27
 756:	66 1f       	adc	r22, r22
 758:	77 1f       	adc	r23, r23
 75a:	88 1f       	adc	r24, r24
 75c:	d2 f7       	brpl	.-12     	; 0x752 <__fp_rempio2+0x40>
 75e:	90 48       	sbci	r25, 0x80	; 128
 760:	0c 94 7b 03 	jmp	0x6f6	; 0x6f6 <__fp_mpack_finite>

00000764 <__fp_sinus>:
 764:	ef 93       	push	r30
 766:	e0 ff       	sbrs	r30, 0
 768:	07 c0       	rjmp	.+14     	; 0x778 <__fp_sinus+0x14>
 76a:	a2 ea       	ldi	r26, 0xA2	; 162
 76c:	2a ed       	ldi	r18, 0xDA	; 218
 76e:	3f e0       	ldi	r19, 0x0F	; 15
 770:	49 ec       	ldi	r20, 0xC9	; 201
 772:	5f eb       	ldi	r21, 0xBF	; 191
 774:	0e 94 b3 01 	call	0x366	; 0x366 <__addsf3x>
 778:	0e 94 8b 02 	call	0x516	; 0x516 <__fp_round>
 77c:	0f 90       	pop	r0
 77e:	03 94       	inc	r0
 780:	01 fc       	sbrc	r0, 1
 782:	90 58       	subi	r25, 0x80	; 128
 784:	e8 e6       	ldi	r30, 0x68	; 104
 786:	f0 e0       	ldi	r31, 0x00	; 0
 788:	0c 94 c6 03 	jmp	0x78c	; 0x78c <__fp_powsodd>

0000078c <__fp_powsodd>:
 78c:	9f 93       	push	r25
 78e:	8f 93       	push	r24
 790:	7f 93       	push	r23
 792:	6f 93       	push	r22
 794:	ff 93       	push	r31
 796:	ef 93       	push	r30
 798:	9b 01       	movw	r18, r22
 79a:	ac 01       	movw	r20, r24
 79c:	0e 94 c5 02 	call	0x58a	; 0x58a <__mulsf3>
 7a0:	ef 91       	pop	r30
 7a2:	ff 91       	pop	r31
 7a4:	0e 94 da 03 	call	0x7b4	; 0x7b4 <__fp_powser>
 7a8:	2f 91       	pop	r18
 7aa:	3f 91       	pop	r19
 7ac:	4f 91       	pop	r20
 7ae:	5f 91       	pop	r21
 7b0:	0c 94 c5 02 	jmp	0x58a	; 0x58a <__mulsf3>

000007b4 <__fp_powser>:
 7b4:	df 93       	push	r29
 7b6:	cf 93       	push	r28
 7b8:	1f 93       	push	r17
 7ba:	0f 93       	push	r16
 7bc:	ff 92       	push	r15
 7be:	ef 92       	push	r14
 7c0:	df 92       	push	r13
 7c2:	7b 01       	movw	r14, r22
 7c4:	8c 01       	movw	r16, r24
 7c6:	68 94       	set
 7c8:	06 c0       	rjmp	.+12     	; 0x7d6 <__fp_powser+0x22>
 7ca:	da 2e       	mov	r13, r26
 7cc:	ef 01       	movw	r28, r30
 7ce:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <__mulsf3x>
 7d2:	fe 01       	movw	r30, r28
 7d4:	e8 94       	clt
 7d6:	a5 91       	lpm	r26, Z+
 7d8:	25 91       	lpm	r18, Z+
 7da:	35 91       	lpm	r19, Z+
 7dc:	45 91       	lpm	r20, Z+
 7de:	55 91       	lpm	r21, Z+
 7e0:	a6 f3       	brts	.-24     	; 0x7ca <__fp_powser+0x16>
 7e2:	ef 01       	movw	r28, r30
 7e4:	0e 94 b3 01 	call	0x366	; 0x366 <__addsf3x>
 7e8:	fe 01       	movw	r30, r28
 7ea:	97 01       	movw	r18, r14
 7ec:	a8 01       	movw	r20, r16
 7ee:	da 94       	dec	r13
 7f0:	69 f7       	brne	.-38     	; 0x7cc <__fp_powser+0x18>
 7f2:	df 90       	pop	r13
 7f4:	ef 90       	pop	r14
 7f6:	ff 90       	pop	r15
 7f8:	0f 91       	pop	r16
 7fa:	1f 91       	pop	r17
 7fc:	cf 91       	pop	r28
 7fe:	df 91       	pop	r29
 800:	08 95       	ret

00000802 <__umulhisi3>:
 802:	a2 9f       	mul	r26, r18
 804:	b0 01       	movw	r22, r0
 806:	b3 9f       	mul	r27, r19
 808:	c0 01       	movw	r24, r0
 80a:	a3 9f       	mul	r26, r19
 80c:	70 0d       	add	r23, r0
 80e:	81 1d       	adc	r24, r1
 810:	11 24       	eor	r1, r1
 812:	91 1d       	adc	r25, r1
 814:	b2 9f       	mul	r27, r18
 816:	70 0d       	add	r23, r0
 818:	81 1d       	adc	r24, r1
 81a:	11 24       	eor	r1, r1
 81c:	91 1d       	adc	r25, r1
 81e:	08 95       	ret

00000820 <_exit>:
 820:	f8 94       	cli

00000822 <__stop_program>:
 822:	ff cf       	rjmp	.-2      	; 0x822 <__stop_program>
